[[aws-firehose-troubleshooting]]
= Amazon Kinesis Data Firehose troubleshooting

++++
<titleabbrev>Troubleshooting</titleabbrev>
++++

[discrete]
[[aws-firehose-monitoring-and-error-handling]]
== Monitoring
You can use the monitoring tab in the Firehose console to ensure there are incoming records and the delivery success rate is 100%.

[role="screenshot"]
image::images/firehose-monitoring.png[Firehose monitoring page showing some charts of delivery success percentage and throughput]

By default Firehose also logs to a Cloudwatch log group with the name `/aws/kinesisfirehose/<delivery stream name>`, which is automatically created when the delivery stream is created.
Two log streams, `DestinationDelivery` and `BackupDelivery`, are created in this log group.

The backup settings in the delivery stream specify how failed delivery requests are handled.
See <<aws-firehose-config-backup-settings>> for details on configuring backups to S3.

[discrete]
[[aws-firehose-scaling]]
== Scaling
Firehose can https://docs.aws.amazon.com/firehose/latest/dev/limits.html[automatically scale] to handle very high throughput.
If your Elastic deployment is not properly configured for the data volume coming from Firehose, it could cause a bottleneck, which may lead to increased ingest times or indexing failures.

There are several facets to optimizing the underlying Elasticsearch performance, but Elastic Cloud provides several ready-to-use hardware profiles which can provide a good starting point.
Other factors which can impact performance are {ref}/size-your-shards.html[shard sizing], {ref}/tune-for-indexing-speed.html[indexing configuration], and {ref}/index-lifecycle-management.html[index lifecycle management (ILM)].

[discrete]
[[aws-firehose-support]]
== Support

If you encounter further problems, please contact Elastic support by following the instructions {estc-welcome-current}/get-support-help.html[here].
