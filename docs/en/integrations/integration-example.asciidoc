[[integration-example-apache]]
= Integration example: Apache

Let's look at an example:
The https://github.com/elastic/integrations/tree/main/packages/apache[Apache integration].
This integration periodically:

* fetches **status metrics** from the Apache server
* fetches and parses **access logs** created by the Apache server
* fetches and parses **error logs** created by the Apache server

Each of these different data types is considered a **data stream**.

[discrete]
[[apache-data-streams]]
== Data streams

****
**Data streams** allow you to store time series data across multiple indices while giving you a single named resource for requests.

[%collapsible]
.Expand to learn more
====
stuff
====
****

Each data stream is represented by a folder in the `data_stream` directory:

[source,text]
----
apache
└───data_stream
│   └───access <1>
│   └───error <1>
│   └───status <1>
----
<1> Apache's three different data streams

Let's choose one of these data streams to dig into: access logs.

[discrete]
[[apache-ingest-pipelines]]
== Ingest pipelines

Access logs (or any logs) should be parsed into structured data prior to ingesting them into {es}.
To do this, integrations use **ingest pipelines**

****
**Ingest pipelines** let you perform common transformations on your data before indexing. For example, you can use pipelines to remove fields, extract values from text, and enrich your data.

A pipeline consists of a series of configurable tasks called processors. Each processor runs sequentially, making specific changes to incoming documents. After the processors have run, {es} adds the transformed documents to your data stream or index.

[%collapsible]
.Expand to learn more
====
stuff
====
****

Ingest pipelines are defined in the `elasticsearch/ingest_pipeline` directory.
They only apply to the parent data stream:

[source,text]
----
apache
└───data_stream
│   └───access
│   │   └───elasticsearch/ingest_pipeline
│   │          default.yml <1>
│   └───error
│   └───status
----
<1> The ingest pipeline definition for the access logs data stream of the apache integration

The ingest pipeline definition requires a description and an array of processors.
Here's a snippet of the access logs ingest pipeline:

[source,yaml]
----
description: "Pipeline for parsing Apache HTTP Server access logs."
processors:
- set:
    field: event.ingested
    value: '{{_ingest.timestamp}}'
- rename:
    field: message
    target_field: event.original
- remove:
    field: apache.access.time
    ignore_failure: true
----

For more information, see ((add a link here of some kind))

[discrete]
[[apache-mappings]]
== Mappings

Ingest pipelines create fields in an {es} index, but don't define the fields themselves.
Each field needs a defined data type, or mapping.

****
**Mapping** is the process of defining how a document, and the fields it contains, are stored and indexed.
Each document is a collection of fields, which each have their own data type. When mapping your data, you create a mapping definition, which contains a list of fields that are pertinent to the document. A mapping definition also includes metadata fields, like the _source field, which customize how a document’s associated metadata is handled.

[%collapsible]
.Expand to learn more
====
stuff
====
****

Mappings are defined in the `fields` directory.
Like ingest pipelines, mappings only apply to the parent datastream.
The apache integration has four different field definitions:

[source,text]
----
apache
└───data_stream
│   └───access
│   │   └───elasticsearch/ingest_pipeline
│   │   │      default.yml
│   │   └───fields
│   │          agent.yml <1>
│   │          base-fields.yml <2>
│   │          ecs.yml <3>
│   │          fields.yml <4>
│   └───error
│   └───status
----
<1> ??
<2> `base-fields.yml` never changes and is required for all integrations
<3> Defines the relevant ECS fields
<4> Custom apache access log fields ??

Maybe include one here or something

[discrete]
[[apache-ecs]]
== ECS fields

****
**ECS**

Something about ECS here.

[%collapsible]
.Expand to learn more
====
stuff
====
****

[discrete]
[[apache-policy-templates]]
== Policy templates?

??

[discrete]
[[apache-kibana-assets]]
== {kib} assets

Something about {kib} dashboards or visualizations

[discrete]
[[apache-everything-else]]
== Everything else

Something about docs, screenshots, and tests
