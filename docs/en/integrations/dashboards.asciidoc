= Create Kibana Dashboards

THIS FILE HAS BEEN REPLACED

// // https://github.com/elastic/integrations/issues/269

// Visualizing integration data in a meaningful way is an important aspect of an integration.

// When creating a new integration, it's important to add dashboards.

// To get started, create a new dashboard, or customize an existing one.
// When you're done making changes, you can use `elastic-package` to export the dashboards and their dependencies to the package source.

// [discrete]
// == Dashboard planning

// Many integrations cover more than one component of a target system.
// For example, the RabitMQ module provides several metricsets covering connection, exchange, node, queue.
// It makes sense to break this information down into several interconnected dashboards,
// with the default one being an overview of a target system, and the others providing deep-dives into the various parts of the target system.
// The content of the Overview dashboard should be cherry-picked from all datasets and individually compiled for every such integration.

// [discrete]
// === Metrics

// Always check the type of a metric and ensure that the correct transformation is applied where applicable.
// For example, in the majority of cases for cumulative counters, it makes sense to apply the rate function.

// // relevant blog post: https://www.elastic.co/blog/visualizing-observability-with-kibana-event-rates-and-rate-of-change-in-tsvb

// [discrete]
// === Visualization type

// For new visualizations, we recommend using Lens first.
// If what you're trying to achieve cannot be accomplished with the current capabilities of Lens, try TSVB.

// // add links

// [discrete]
// === Filters

// When building a dashboard always consider adding a filter dropdown. Why?
// In most cases the integrations are used to monitor multiple instances of a target system,
// so we need to provide a way to switch between them.

// Use the Controls visualization to build a filter dropdown.
// Here's an example of a host name dropdown that can be added the System dashboard:

// // screenshot omitted for now

// // screenshot omitted for now

// // screenshot omitted for now

// [discrete]
// === Navigation

// If an integration has several dashboards, ensure that all of them can be easily navigated.
// To build dashboard navigation use the Markdown visualization type.

// For example, the System dashboard provides the following navigation:

// // screenshot omitted for now

// Source:

// [source,text]
// ----
// [System Overview](#/dashboard/system-Metrics-system-overview-ecs)  | [Host Overview](#/dashboard/system-79ffd6e0-faa0-11e6-947f-177f697178b8-ecs) |
// [Containers overview](#/dashboard/system-CPU-slash-Memory-per-container-ecs)
// ----

// While this can work, it doesn't highlight the selected dashboard.
// Unfortunately the Markdown control is not optimized for navigation,
// which makes it cumbersome to build navigation with highlighted links because each link should be highlighted separately.
// This means that the navigation control you're building has to be cloned as many times as there are dashboard to ensure proper link highlighting. E.g.

// [source,text]
// ----
// **[System Overview](#/dashboard/system-Metrics-system-overview-ecs)**  | [Host Overview](#/dashboard/system-79ffd6e0-faa0-11e6-947f-177f697178b8-ecs) |
// [Containers overview](#/dashboard/system-CPU-slash-Memory-per-container-ecs)

// [System Overview](#/dashboard/system-Metrics-system-overview-ecs)  | **[Host Overview](#/dashboard/system-79ffd6e0-faa0-11e6-947f-177f697178b8-ecs)** |
// [Containers overview](#/dashboard/system-CPU-slash-Memory-per-container-ecs)

// [System Overview](#/dashboard/system-Metrics-system-overview-ecs)  | [Host Overview](#/dashboard/system-79ffd6e0-faa0-11e6-947f-177f697178b8-ecs) |
// **[Containers overview](#/dashboard/system-CPU-slash-Memory-per-container-ecs)**
// ----

// [discrete]
// === Target system name

// Currently we don't make it a rule to show on a dashboard what system it's designed to monitor. The only way to see it is through the dashboard name.

// // screenshot omitted for now

// When using multiple dashboard on bigger screens, it makes it hard to distinguish between the dashboards. This can be improved by using the Markdown control to show what target system the dashboard is used for.

// [discrete]
// === Naming

// Use the following naming convention when building dashboards

// [discrete]
// ==== Visualizations

// [source,text]
// ----
// <NAME> [<Metrics | Logs> <PACKAGE NAME>]
// ----

// Examples:

// * Memory Usage Gauge [Metrics System]
// * New groups [Logs System]

// Rename all visualizations added to a dashboard to only show the <NAME> part.

// // screenshot omitted for now

// [discrete]
// ==== Dashboards

// [source,text]
// ----
// [<Metrics | Logs> <PACKAGE NAME>] <Name>
// ----

// Examples:

// * [Metrics System] Host overview
// * [Metrics MongoDB] Overview

// [discrete]
// === Screenshots

// // add tips

// [discrete]
// == Exporting

// // move to new page

// // add https://www.elastic.co/guide/en/beats/devguide/current/export-dashboards.html

// [source,terminal]
// ----
// elastic-package export
// ----