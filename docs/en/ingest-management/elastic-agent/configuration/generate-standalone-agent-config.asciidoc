[[generate-standalone-agent-config]]
= Generate a standalone {agent} configuration file

include::{fleet-repo-dir}/standalone-note.asciidoc[]

To get started quickly, generate a standalone configuration in {kib} then
download it as a starting point for your {agent} configuration. This approach
saves time, is less error prone, and populates the configuration with a lot of
details that are tedious to add manually. This process also loads the assets you
need, such as dashboards and ingest pipelines, before you start your {agent}s.

TIP: If you're a {fleet} user and already have an agent policy you want to
use in standalone mode, go to *{fleet} > Agents* and click *Add agent*. Follow
the steps under *Run standalone* to generate the file.

//QUESTION: When using the Integrations UI to create a new agent policy, I saw 
//I saw the message: "Impossible to create an API key: //feature not enabled
//exception...Reason: api keys are not enabled."
//
//It seems like Kibana _did_ create the policy despite the error, though. I've
//added the following sentence, but I don't know if it's true or if the error is
//a bug.

You don't need {fleet} to perform these steps, but API keys must be enabled
in the {es} configuration (set `xpack.security.authc.api_key.enabled: true`).

. From the main menu in {kib}, click *Add integrations*, and search for the
{agent} integration you want to use.

. Click the integration to see more details about it, then click
*Add <Integration>*.
+
[role="screenshot"]
image::images/add-integration-standalone.png[Add Nginx integration screen with agent policy selected]

. Under *Configure integration*, enter a name and description for the integration.

. Click the down arrow next to enabled streams and make sure the settings are
correct for your host.

. For the agent policy, select an existing policy, or click
*Create agent policy* and create a new one.
+
{kib} will use this policy to generate the standalone configuration.

. When youâ€™re done, save and continue.
+
A popup window gives you the option to add {agent} to your hosts.
+
[role="screenshot"]
image::images/add-agent-to-hosts.png[Pop-up window showing the option to add {agent} to your hosts]

. (Optional) To add more integrations to the agent policy, click *Add {agent}
later* and go back to the *Integrations* page. Repeat the previous steps for each
integration.

. When you're done adding integrations, in the pop-up window, click *Add {agent}
to your hosts* to open the *Add agent* flyout. 

. Click *Run standalone* and follow the in-product instructions to download
{agent} (if you haven't already).

. Click *Download Policy* to download the generated file.
+
[role="screenshot"]
image::images/download-agent-policy.png[Add data screen with option to download the default agent policy]

The generated policy already contains the correct {es} address and port for your
setup. Modify the policy, as required, making sure that you provide credentials
for connecting to {es}.

If you need to add integrations to the policy _after_ deploying the
configuration, you'll need to run through these steps again and re-deploy the
updated configuration to the host where {agent} is running.

For detailed information about starting the agent, including the permissions
needed for the {es} user, refer to <<install-standalone-elastic-agent>>.

[discrete]
[[update-standalone-configurations]]
== Update standalone configurations

Because standalone agents are not managed by {fleet}, they are unable to upgrade
to new integration package versions automatically. When you upgrade an
integration in {kib} (or it gets upgraded automatically), you'll need to update
the standalone configuration to use new features and capabilities.

You'll also need to update the standalone configuration to add new integrations.

To update your standalone configuration, use the same steps you used to generate
the original configuration file:

. Follow the steps under <<generate-standalone-agent-config>> to generate a
new configuration, then compare the new configuration file to your old
configuration.

. Either use the new configuration and apply your customizations to it, or
update your old configuration to include changes, such as field changes, added
by the upgrade.

IMPORTANT: Make sure you update the configuration in the directory where
{agent} is running, not the directory where you downloaded the installation
package. Refer to <<installation-layout>> for the location of installed {agent}
files.
