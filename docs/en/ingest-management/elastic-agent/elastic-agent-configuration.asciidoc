[[elastic-agent-configuration]]
[role="xpack"]
= Agent policy settings

The policy settings for {fleet}-managed agents are specified through the UI.
You do not set them explicitly in a configuration file.

For standalone agents, you need to configure settings in the `elastic-agent.yml`
file. Prior to installation, edit the file located in the extracted {agent}
package. After installation, edit the file located in the directory
described in <<installation-layout>>. 

TIP: To get started quickly, you can use {fleet} to generate a standalone
configuration. For more information, see <<run-elastic-agent-standalone>>.

The following sections describe some settings you might need to configure to
run an {agent} standalone. For a full reference example, refer to the
<<elastic-agent-reference-yaml,elastic-agent.reference.yml>> file.


[discrete]
[[elastic-agent-output-configuration]]
== Output settings

Output settings specify where to send data. You can specify multiple outputs to
pair specific inputs with specific outputs.

{agent} currently supports these outputs:

* <<elasticsearch-output>>
* <<logstash-output>> (standalone mode only)

[discrete]
[[elasticsearch-output]]
=== {es} output

The {es} output sends events directly to {es} by using the {es} HTTP API.

*Compatibility:* This output works with all compatible versions of {es}. See the
https://www.elastic.co/support/matrix#matrix_compatibility[Elastic Support
Matrix].

This example configures two {es} outputs: `default` and  `monitoring`:

[source,yaml]
-------------------------------------------------------------------------------------
outputs:
  default:
    type: elasticsearch
    hosts: [127.0.0.1:9200]
    username: elastic
    password: changeme

  monitoring:
    type: elasticsearch
    api_key: VuaCfGcBCdbkQm-e5aOx:ui2lp2axTNmsyakw9tvNnw
    hosts: ["localhost:9200"]
    ca_sha256: "7lHLiyp4J8m9kw38SJ7SURJP4bXRZv/BNxyyXkCcE/M="
-------------------------------------------------------------------------------------

Notice that they use different authentication methods. The first one uses a
username and password pair, and the second one contains an API key.

[NOTE]
==============
A default output configuration is required.
==============

[discrete]
[[logstash-output]]
= {ls} output

IMPORTANT: The {ls} output is currently only supported for {agent}s in
standalone mode. {fleet}-managed agents are not supported.

The {ls} output uses an internal protocol to send events directly to {ls} over
TCP. {ls} provides additional parsing, transformation, and routing of data
collected by {agent}.

*Compatibility:* This output works with all compatible versions of {ls}. Refer
to the https://www.elastic.co/support/matrix#matrix_compatibility[Elastic
Support Matrix].

This example configures a {ls} output called `default` in the
`elastic-agent.yml` file:

[source,yaml]
----
outputs:
  default:
    type: logstash
    hosts: ["127.0.0.1:5044"] <1>
----
<1> The {ls} server and the port (`5044`) where {ls} is configured to listen for
incoming {agent} connections.

To send events to {ls}, you also need to create a {ls} configuration pipeline.
The {ls} configuration pipeline listens for incoming {agent} connections,
processes received events, and then sends the events to {es}.

The following example configures a {ls} pipeline that listens on port `5044` for
incoming {agent} connections and routes received events to {es}:

[source,yaml]
----
input {
  elastic_agent {
    port => 5044
  }
}
output {
  elasticsearch {
    hosts => ["http://localhost:9200"] <1>
    data_stream => "true"
  }
}
----
<1> The {es} server and the port (`9200`) where {es} is running.

For more information about configuring {ls}, refer to
{logstash-ref}/configuration.html[Configuring {ls}] and
{logstash-ref}/plugins-inputs-elastic_agent.html[{agent} input plugin].

[discrete]
[[elastic-agent-monitoring-configuration]]
== {beats} monitoring settings

{agent} monitors {beats} by default. To disable or change monitoring
settings, set options under `agent.monitoring`:

[source,yaml]
-------------------------------------------------------------------------------------
agent.monitoring:
  # enabled turns on monitoring of running processes
  enabled: true
  # enables log monitoring
  logs: true
  # enables metrics monitoring
  metrics: true
  # specifies output to be used
  use_output: monitoring
-------------------------------------------------------------------------------------


To disable monitoring, set `agent.monitoring.enabled` to `false`. When set to
`false`, {beats} monitoring is turned off, and all other options in this section
are ignored.

To enable monitoring, set `agent.monitoring.enabled` to `true`. Also set the
`logs` and `metrics` settings to control whether logs, metrics, or both are
collected. If neither setting is specified, monitoring is disabled. Set
`use_output` to specify the output to which monitoring events are sent.

[discrete]
[[elastic-agent-input-configuration]]
== Input settings

By default {agent} collects system metrics, such as cpu, memory, network, and
filesystem metrics, and sends them to the default output. For example:


[source,yaml]
-------------------------------------------------------------------------------------
inputs:
  - type: system/metrics
    data_stream.namespace: default
    use_output: default
    streams:
      - metricset: cpu
        data_stream.dataset: system.cpu
      - metricset: memory
        data_stream.dataset: system.memory
      - metricset: network
        data_stream.dataset: system.network
      - metricset: filesystem
        data_stream.dataset: system.filesystem
-------------------------------------------------------------------------------------

If `use_output` is not specified, the `default` output is used.

[discrete]
[[elastic-agent-reference-yaml]]
== Reference yaml

The {agent} installation includes an `elastic-agent.reference.yml` file that
describes settings available in a standalone configuration.

The contents of the file are included here for your convenience.

[source,yaml]
----
include::elastic-agent-reference-yaml.yml[]
----
