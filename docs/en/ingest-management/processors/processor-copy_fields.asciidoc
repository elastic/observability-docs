[[copy_fields-processor]]
= Copy fields

++++
<titleabbrev>copy_fields</titleabbrev>
++++

The `copy_fields` processor takes the value of a field and copies it to a new
field.

You cannot use this processor to replace an existing field. If the target
field already exists, you must <<drop_fields-processor,drop>> or
<<rename-processor,rename>> the field before using `copy_fields`.

[discrete]
== Example

This configuration:

[source,yaml]
----
  - copy_fields:
      fields:
        - from: message
          to: event.original
      fail_on_error: false
      ignore_missing: true
----

Copies the original `message` field to `event.original`:

[source,json]
-----
{
  "message": "my-interesting-message",
  "event": {
      "original": "my-interesting-message"
  }
}
-----

[discrete]
== Configuration settings

// set this attribute for processors that reference event fields
:works-with-fields:
include::processors.asciidoc[tag=processor-limitations]
// reset the attribute to null
:works-with-fields!:

[options="header"]
|===
| Name | Required | Default | Description

| `fields`
| Yes
|
| List of `from` and `to` pairs to copy from and to. You can use the `@metadata.` prefix to copy values from or to event metadata.

| `fail_on_error`
| No
| `true`
| Whether to fail if an error occurs. If `true` and an error occurs, any changes are reverted, and the original is returned. If `false`, processing continues even if an error occurs.

| `ignore_missing`
| No
| `false`
| Whether to ignore events that lack the source field. If `false`, the processing of an event will fail if a field is missing.
|===
