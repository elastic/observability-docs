[[urldecode-processor]]
= URL Decode

++++
<titleabbrev>urldecode</titleabbrev>
++++

The `urldecode` processor specifies a list of fields to decode from URL encoded
format.

[discrete]
== Example

In this example, `field1` is decoded in `field2`.

[source,yaml]
-------
  - urldecode:
      fields:
        - from: "field1"
          to: "field2"
      ignore_missing: false
      fail_on_error: true
-------

[discrete]
== Configuration settings

// set this attribute for processors that reference event fields
:works-with-fields:
include::processors.asciidoc[tag=processor-limitations]
// reset the attribute to null
:works-with-fields!:

[options="header"]
|===
| Name | Required | Default | Description


| `fields`
| Yes
|
a| Contains:

* `from: "source-field"`, where `from` is the source field name
* `to: "target-field"`, where `to` is the target field name (defaults to the `from` value)

| `ignore_missing`
| No
| `false`
| Whether to ignore missing keys. If `true`, no error is logged if a key that should be URL-decoded is missing.

| `fail_on_error`
| No
| `true`
| Whether to fail if an error occurs. If `true` and an error occurs, the URL-decoding of fields is stopped, and the original event is returned. If `false`, decoding continues even if an error occurs during decoding.

|===

See <<conditions>> for a list of supported conditions.
