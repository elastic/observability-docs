[[upgrade-integration]]
= Upgrade an {agent} integration

IMPORTANT: An internet connection is required for {kib} to download integration
packages from the Elastic Package Registry. Make sure the {kib} server can
connect to `https://epr.elastic.co` on port `443`.

Elastic releases {agent} integration updates periodically. To use new features
and capabilities, upgrade the installed integration to the latest version and
optionally upgrade integration policies to use the new version.

TIP: In larger deployments, you should test integration upgrades on a sample
{agent} before rolling out a larger upgrade initiative.

[discrete]
[[upgrade-integration-to-latest-version]]
== Upgrade an integration to the latest version

. In {kib}, go to *Management > Integrations > Installed*. Search for and select
the integration you want to upgrade. Notice there is a warning icon next to the
version number to indicate a new version is available.

. Click the *Settings* tab and notice the message about the new version.
+
[role="screenshot"]
image::images/upgrade-integration.png[Settings tab under Integrations shows how to upgrade the integration]

. Before upgrading the integration, decide whether to upgrade integration
policies to the latest version, too. To use new features and capabilities,
you'll need to upgrade existing integration policies. However, the upgrade may
introduce changes, such as field changes, that require you to resolve conflicts.
+
--
* Select *Upgrade integration policies* for {fleet} to upgrade any eligible
integration policies when it upgrades the integration.

* To continue using the older package version, deselect
*Upgrade integration policies*. You can still choose to
<<upgrade-integration-policies-manually,upgrade integration policies manually>>
later on.
--

. Click *Upgrade to latest version*.
+
If you selected *Upgrade integration policies* and there are conflicts,
<<upgrade-integration-policies-manually,upgrade integration policies manually>>
and resolve the conflicts in the policy editor.

. After the upgrade is complete, verify that the installed version and latest
version match.

[discrete]
[[upgrade-integration-policies-automatically]]
== Keep integration policies up to date automatically

Some integration packages, like System, are installed by default during {fleet}
setup. These integrations are upgraded automatically when {fleet} detects that a
new version is available. These integrations have an option to upgrade
integration policies automatically, too. When this option is selected (the
default), {fleet} automatically upgrades your policies behind the scenes when a
new version of the integration is available. If there are conflicts during the
upgrade, your integration policies will not be upgraded, and you'll need to
<<upgrade-integration-policies-manually,upgrade integration policies manually>>.

To keep integration policies up to data automatically:

. In {kib}, go to *Management > Integrations > Installed*. Search for and select
the integration you want to configure.

. Click *Settings* and make sure
*Keep integration policies up to data automatically* is selected. 
+
[role="screenshot"]
image::images/upgrade-integration-policies-automatically.png[Settings tab under Integrations shows how to keep integration policies up to date automatically]
+
If this option isn't available on the *Settings* tab, this feature is not
available for the integration you're viewing.


[discrete]
[[upgrade-integration-policies-manually]]
== Upgrade integration policies manually

If you can't upgrade integration policies when you upgrade the integration,
upgrade them manually.

. Click the *Policies* tab and find the integration policies you want to
upgrade.
+
[role="screenshot"]
image::images/upgrade-package-policy.png[Policies tab under Integrations shows how to upgrade the package policy]

. Click *Upgrade* to begin the upgrade process.
+
The upgrade will open in the policy editor.
+
[role="screenshot"]
image::images/upgrade-policy-editor.png[Upgrade integration example in the policy editor]

. Make any required configuration changes and, if necessary, resolve conflicts.
For more information, refer to <<resolve-conflicts>>.

. Repeat this process for each policy with an out-of-date integration.

Too many conflicts to resolve? Refer to the 
<<upgrading-integration-too-many-conflicts,troubleshooting docs>> for manual
steps.

[discrete]
[[resolve-conflicts]]
== Resolve conflicts

When attempting to upgrade an integration policy, it's possible that
breaking changes or conflicts exist between versions of an integration. For
example, if a new version of an integration has a required field and doesn't
specify a default value, {fleet} cannot perform the upgrade without user input.
Conflicts are also likely if an experimental package greatly restructures its
fields and configuration settings between releases.

If {fleet} detects a conflict while automatically upgrading an integration
policy, it will not attempt to upgrade it. You'll need to:

. <<upgrade-integration-policies-manually,Upgrade the integration policy manually>>.

. Use the policy editor to fix any conflicts or errors.
+
[role="screenshot"]
image::images/upgrade-resolve-conflicts.png[Resolve field conflicts in the policy editor]

.. Under *Review field conflicts*, notice that you can click
*previous configuration*  to view the raw JSON representation of the old
integration policy and compare values. This feature is useful when fields have
been deprecated or removed between releases.
+
[role="screenshot"]
image::images/upgrade-view-previous-config.png[View previous configuration to resolve conflicts]

.. In the policy editor, fix any errors and click *Upgrade integration*.
