[id="fleet-faq",titleabbrev="FAQ"]
[role="xpack"]
= Frequently asked questions

beta[]

We have collected the most frequently asked questions here. If your question
isn't answered here, contact us in the {forum}[discuss forum]. Your feedback
is very valuable to us.

Also read <<fleet-troubleshooting>>.

[discrete]
[[enrolled-agent-not-showing-up]]
== Why doesn't my enrolled agent show up in the {fleet} app?

If {agent} was successfully enrolled, but doesn't show up in the *Agents* list,
it might not be started. Make sure the `elastic-agent` process is running on
the host. If it's not running, use the <<elastic-agent-run-command,`run`>>
command to start it.  The most common way to deploy an {agent} is by using
the `install` command. This command starts the {agent} for you.

[discrete]
[[where-are-the-agent-logs]]
== Where does {agent} store logs after startup?

The location of {agent} logs varies by platform. In general, {agent} stores
logs under the `data` directory where {agent} was started. For example, on
macOS, you'll find logs for the running {agent} under path similar to:

`/Library/Elastic/Agent/data/elastic-agent-08e204/logs/elastic-agent-json.log`

You'll find logs for the {beats} shippers, such as {metricbeat}, under paths
like:

`/Library/Elastic/Agent/data/elastic-agent-08e204/logs/default/metricbeat-json.log`

If the log path does not exist, {agent} was unable to start {metricbeat}, which
is a higher level problem to triage. Usually you can see these logs in the
{fleet} UI, unless there are problems severe enough that the {agent} or its
related  processes cannot send data to {es}.

See <<installation-layout>> to find out the exact paths for each platform.

[discrete]
[[what-is-my-agent-config]]
== What policy is the {agent} running?

To find the policy file, inspect the `elastic-agent.yml` file in the
directory where {agent} is running. Not sure where the agent is running? See 
<<installation-layout>>.

If the agent is running in {fleet} mode, this file contains the following
citation:

[source,yaml]
----
fleet:
  enabled: true
----

The `action_store.yml` file (located under `data/elastic-agent-*`) contains the
entire, unencrypted policy.

* To see the {es} location, look at the `hosts` setting under `outputs`. For
example:
+
--
[source,json]
----
outputs:
  default:
    api_key: Aq-mPpcBDA7TmnriKCSD:Np6NAleNQ1mMpgN_JPYazw
    hosts:
    - https://3m63533c175a4036b3d8bbe7bd462fa3.us-east-1.aws.found.io:443
    type: elasticsearch
----

This file also shows the version of all packages used by the current
policy.
--

* To see the {agent} version, run:
+
[source,shell]
----
elastic-agent version
----


[discrete]
[[where-is-the-data-agent-is-sending]]
== Why can't I see the data {agent} is sending?

If {elastic-agent} is set up and running, but you don't see data in {kib}:



. Go to **Management > Dev Tools** in {kib}, and in the Console, search your
index for data. For example:
+
[source,console]
----
GET metrics-*/_search
----
+
Or if you prefer, go to the **Discover** app.

. Look at the data that {elastic-agent} has sent and see if the `name.host`
field contains your host machine name.

If you don't see data for your host, it's possible that the data is blocked
in the network, or that a firewall or security problem is preventing the {agent}
from sending the data.

Although it's redundant to install stand-alone {metricbeat}, you might want to
try installing it to see if it's able to send data successfully to {es}. For
more information, see
{metricbeat-ref}/metricbeat-installation-configuration.html[{metricbeat} quick start].

If {metricbeat} is able to send data to {es}, there is possibly a bug or
problem with {agent}, and you should report it.

[discrete]
[[i-deleted-my-agent]]
== How do I restore an {agent} that I deleted from {fleet}?

It's ok, we've got your back! The data is still in {es}. To add {agent}
to {fleet} again, <<stop-elastic-agent>>, re-enroll it on the host, then
run {agent}.

[discrete]
[[i-rebooted-my-host]]
== How do I restart {agent} after rebooting my host?

//TODO: Verify that this works (it didn't work for me on macOS)

{agent} should restart automatically when you reboot your host. If it doesn't,
you can start it manually by running:

[source,shell]
----
elastic-agent run
----

If the process is already running, you can restart it by running:

[source,shell]
----
elastic-agent restart
----

[discrete]
[[does-agent-download-packages]]
== Does {agent} or {kib} download integration packages?

{agent} does not download integration packages. When you add an integration in
{fleet}, {kib} connects to the {package-registry} at `epr.elastic.co`,
downloads the integration package, and stores its assets in {es}. This means
that you no longer have to run a manual setup command to load integrations as
you did previously with {beats} modules.

[discrete]
[[does-agent-download-anything-from-internet]]
== Does {agent} download anything from the Internet?

As of 7.10 and beyond, the endpoint security capabilities are bundled with {agent},
so a fully capable artifact can be installed with no connection to the Elastic
download site.  However, if it is in use, the {elastic-endpoint-integration} process
is instructed to attempt to download newer released versions of the integration specific 
artifacts it uses.  Some of those are, for example, the malware model, trusted apps artifact, 
exceptions list artifact, and others.  For more information, see the 
{security-guide}/index.html[Elastic Security solution documentation].

[discrete]
[[do-i-need-to-setup-elastic-agent]]
== Do I need to set up the {beats} managed by {agent}?

You might have noticed that {agent} runs {beats} under the hood. But note that
the {beats} managed by {agent} are set up and run differently from standalone
{beats}. 

For example, standalone {beats} use modules and require you to run a setup
command on the host to load assets, such as ingest pipelines and dashboards. In
contrast, {beats} managed by {agent} use integration packages that {kib}
downloads from the {package-registry} at `epr.elastic.co`. This means that
{agent} does not need extra privileges to set up assets because
{fleet} manages the assets.

[discrete]
[[what-is-the-endpoint-package]]
== What is the {elastic-endpoint-integration} integration in {fleet}?

The {elastic-endpoint-integration} integration provides protection on your {agent}
controlled host. The integration monitors your host for security-related events,
allowing for investigation of security data through the {security-app} in {kib}.
The {elastic-endpoint-integration} integration is managed by {agent} in the
same way as other integrations. Try it out! For more information, see the
{security-guide}/index.html[{elastic-sec} documentation].

[discrete]
[[how-are-security-to-agent-communications-secured]]
== How are communications secured between {elastic-sec} and {agent}?

{elastic-sec} connects to the agent over loopback TLS on port 6788.
{elastic-sec} validates that the agent has root (Linux and macOS) or SYSTEM
(Windows) permissions.

//REVIEWERS: Unsure here whether we want to say Elastic Endpoint or Elastic
//Security. ^^


[discrete]
[[how-are-agent-kibana-communications-secured]]
== How are communications secured between {agent} and {kib}?

{agent} connects to {kib} over TLS and authenticates the certificate
presented by {kib}. The agent then provides an API key as an authentication
token, which {kib} validates.

[discrete]
[[which-es-kibana-ports-are-needed]]
== Which {es} and {kib} ports need to be accessible?

The policy generated by {fleet} already contains the correct {es} address
and port for your setup. If you run everything locally, the address is
`127.0.0.1:9200`. If you use our
https://www.elastic.co/cloud/elasticsearch-service[hosted {ess}] on {ecloud},
you can copy the {es} endpoint URL from the overview page of your deployment.
If you're not running in {ecloud}, make sure the {kib} and {es} HTTPS ports
are both accessible; by default these are `5601` and `9200` respectively.
