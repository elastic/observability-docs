[[fleet-troubleshooting]]
[role="xpack"]
= Troubleshoot common problems

beta[]

We have collected the most common known problems here. If your problem isn't
described here, please review open issues in the following GitHub repositories:

* https://github.com/elastic/kibana/issues[{kib}]
* https://github.com/elastic/beats/issues[{beats}]
* https://github.com/elastic/fleet-server/issues[{fleet-server}]
* https://github.com/elastic/package-registry/issues[{package-registry}]

Have a question? Read our <<fleet-faq,FAQ>>, or contact us in the
{forum}[discuss forum]. Your feedback is very valuable to us.

[discrete]
[[fleet-server-not-in-kibana-cloud]]
== {fleet-server} is not listed in {kib} when using {ecloud}

If you are unable to see {fleet-server} in {kib}, make sure it's setup.

**To setup {fleet-server} on {ecloud}:**

. Go to your deployment in the user console and follow the {ecloud} prompts
to set up 'APM & Agent', the rest is handled for you, {fleet-server} {agent}
will show up in {fleet}.

**To enable {fleet} and setup {fleet-server} on a self-managed cluster:**

. In the {es} configuration file, `config/elasticsearch.yml`, set the following
security settings to enable security and API keys:
+
[source,yaml]
----
xpack.security.enabled: true
xpack.security.authc.api_key.enabled: true
----

. In the {kib} configuration file, `config/kibana.yml`, enable {fleet}
and specify user credentials:
+
[source,yaml]
----
xpack.fleet.enabled: true
xpack.fleet.agents.tlsCheckDisabled: true <1>
xpack.encryptedSavedObjects.encryptionKey: "something_at_least_32_characters"
xpack.security.enabled: true
elasticsearch.username: "my_username" <2>
elasticsearch.password: "my_password"
----
<1> This setting is not required if you configure TLS checking.
<2> Specify a user who is authorized to use {fleet}.

[TIP]
=====
To set up passwords, you can use the documented {es} APIs or the
`elasticsearch-setup-passwords` command. For example:

`./bin/elasticsearch-setup-passwords auto`
=====

After running the command, copy the Elastic user name to the {kib} config file.
Then restart {kib}.

Then follow the documented steps for setting up a self-managed {fleet-server}.

[discrete]
[[fleet-setup-fails]]
== The `/api/fleet/setup` endpoint can't reach the package registry

In order to install {integrations}, the {fleet} app needs to connect to
an external service called the {package-registry}. For this to work, the {kib}
server must be able to connect to `https://epr.elastic.co` on port 443.

[discrete]
[[fleet-app-crashes]]
== {fleet} in {kib} crashes

To find more about the error, open your browser's development console, navigate
to the **Network** tab, and refresh the page. One of the requests to the
{fleet} API will most likely have returned an error. If the error
message doesn't give you enough information to fix the problem, please contact
us in the {forum}[discuss forum].

[discrete]
[[agent-enrollment-timeout]]
== {agent} enrollment fails on the host with `Client.Timeout exceeded` message

{agent} must be able to connect to the {fleet-server} instance to enroll in {fleet}.
If the agent is unable to connect, you will see the following failure:

[source,output]
-----
fail to enroll: fail to execute request to {fleet-server}:Post http://fleet-server:8220/api/fleet/agents/enroll?: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
-----

This may occur if the host is unable to connect to {fleet-server}. To troubleshoot the
problem:

. Check for networking problems. Run the `ping` command from the host to confirm
that it can reach the {fleet-server} instance.

. Further try to 'curl' the actual
/status api of {fleet-server} as:
curl -f http://<fleet-server-url>:8220/api/status

. Verify that the {kib} {fleet} settings URL and port you specified are correct for
your environment.  HTTPS protocol is the default expected by {fleet-server} to communicate
with {es} and port 8220 is the port, unless you have explicitly set it otherwise.

. Check the enrollment key that you specified during enrollment to confirm that
the key is valid. To do this:
.. In {fleet}, go to the **Agents** tab and click **Enrollment Tokens**. 
.. Click the eyeball icon to see the secret. The secret should match the string
that you used to enroll {agent} on your host.
.. If the secret doesn't match, create a new enrollment token and use the new
token when you run the `elastic-agent enroll` command.

[discrete]
[[general-fleet-server-triage]]
== Many {fleet-server} problems can be triaged and fixed with the below tips

{fleet-server} allows {agent} to connect to {es}, in this it is the same as the connection
to {kib} as in prior releases.  But since {fleet-server} is on the edge host, it may
result in some additional networking setup and trouble-shooting.  This section can help
identify what is needed when logging an SDH or sending a support forum communication.

This is how to get the 'version' of the Agent on disk:
. If you ‘installed’ the Elastic Agent you can run the following.  The example is for posix
based systems.
elastic-agent version

or if you have not installed it and are running Agent as a temporary process, you can run:
./elastic-agent version

Both commands are accessible via Windows or macOS with their OS specific slight variation in
how you call them.  Please check the main install documentation for examples of how to adjust them,
if needed.

Also valuable is the following command line call:
elastic-agent status
This command can tell you what Agent thinks its status is, and this may be helpful to know.
Further action can be taken based on the info received at this point.

If Agent is running but you are not seeing what you expect, here are some common items to check:
. check which policy is listed in the {kib} UI as associated with the running Agent.
.. if it is not the Policy you expected, change it to the desired one!
. check the Policy in the {kib} UI for what Integrations are intended to be included.
.. If you wish to include System data, make sure the System Integration is included in the Policy.
. check the {agent} Policy Integration ‘Settings’ page to confirm if the ‘Collect Agent Logs (or Metrics)’
options are selected or not.
.. If you wish to collect logs or Metrics but the options are unselected, enable them and save it.

{escloud} usage note: The collection of logs / metrics is not intended to be included in cloud oriented
‘Elastic Agent on Cloud policy’.  FYI: This Policy is only created in {escloud} deployments.

Also, for some more advanced debugging cases, you can collect a few more files up front to assess
and give to the Elastic team for review, which should all be in the Agent directory on disk:
state.yml
fleet.yml
elastic-agent.yml

[discrete]
[[not-installing-no-logs-in-terminal]]
== Some problems occur so early that insufficient logging is available, stand-alone install can help

The following command will install the Agent with a default configuration:
./elastic-agent install -f
At this point, all of the service configuration will be setup and so the 'enrollment' command can be run:

Then the enrollment command can be give, with the same params as indicted for your usage prior.  example:
elastic-agent enroll -f --fleet-server-es=https://<es-url>:443 --fleet-server-service-token=<token> --fleet-server-policy=<policy-id>

At this point you can check the cited 'installed' Agent log locations in the documentation to find better info!

[discrete]
[[agent-healthy-but-no-data-in-es]]
== The Agent can be cited as 'Healthy' but still have setup problems sending data to {es} this triage can help

Confirm the Agent is running and is ‘Healthy’ (even as shown in {fleet}).  If you have elected to ‘collect
Agent Logs’ option you can see the logs in the {agent} details page Logs tab.  If they do not show there it
likely points to a communication problem of your host with {es}. This could be possibly because of:
. the port is already in use.  You can check the port usage with a tool like wireshark or netstat and confirm
nothing is already binding to it.  On a posix system you can call akin to this:
netstat -nat | grep :8220

If there is a response data for this command line call, then you know it is in use (which may be correct
or may not be, if you had intended the Fleet Server to be uninstalled (in which case you can re-check that
and continue)

[discrete]
[[secondary-agent-not-connecting]]
== {fleet-server} is running and healthy with data, but other Agents cannot use it to connect to {es}

There are some settings that are only used if you have multiple {agents}.  In this case, it may help
to check that the hosts can communicate with the {fleet-server}.  To do this, check this with the
/status api as below, from the non-fleet-server host. Execute:
curl -f http://<fleet-server-ip>:8220/api/status

This may yield errors that can be debugged further, or it may work and show that communication ports and
networking are not the problem.

One common problem is that the default port of 8220 for {fleet-server} isn’t open on the {fleet-server}
host to communicate, so you can review and correct this using common tools, in alignment with any
networking and security concerns you or your system may have.

[discrete]
[[es-apikey-failed]]
== {es} authentication service fails with `Authentication using apikey failed` message

{fleet} requires an encryption key in order to save API keys and encrypt them in
{es}. To provide an API key, set the `xpack.encryptedSavedObjects.encryptionKey`
property in the `kibana.yml` configuration file. For example:

[source,yaml]
----
xpack.encryptedSavedObjects.encryptionKey: "something_at_least_32_characters"
----

[discrete]
[[process-not-root]]
== {agent} fails with `Agent process is not root/admin or validation failed` message

Make sure the user running {agent} has root privileges. If you're running
{agent} in the foreground (and not as a service) on Linux or macOS, run the
agent under the root user, for example, `sudo` or `su`. Some integrations
require root privileges to collect sensitive data.

If you're using the {elastic-endpoint-integration} integration, also make sure you're
running {agent} under the SYSTEM account.

TIP: If you install {agent} as a service as described in
<<elastic-agent-installation>>, {agent} runs under the SYSTEM account by
default.

To run {agent} under the SYSTEM account, you can:

. Download https://docs.microsoft.com/en-us/sysinternals/downloads/psexec[PsExec]
and extract the contents to a folder, for example, `d:\tools`.
. Open a command prompt as an Administrator (right-click the Command Prompt
icon and select *Run As Administrator*).
. From the command prompt, run {agent} under the SYSTEM account:
+
[source,sh]
----
d:\tools\psexec.exe -sid "C:\Program Files\Elastic-Agent\elastic-agent.exe" run
----

[discrete]
[[agent-hangs-while-unenrolling]]
== {agent} hangs while unenrolling

When you unenroll an agent, {fleet} waits for acknowledgement from the agent
before it completes the unenrollment process. If {fleet} doesn't receive
acknowledgement, the status hangs at `unenrolling.`

If this happens, select **Force unenroll** from the *Actions* menu in the
Agents list.

This will invalidate all API keys related to the agent and change the status to
`inactive` so that the agent no longer appears in {fleet}.

[discrete]
[[endpoint-unauthorized]]
== API key is unauthorized to send telemetry to `.logs-endpoint.diagnostic.collection-*` indices

Telemetry is turned on by default in the {stack}. This helps us learn about the
features that our users are most interested in, so we can focus our efforts on
making them even better.

If you've recently upgraded from version 7.10 to 7.11, you might see the
following message when you view {endpoint-sec} logs:

----
action [indices:admin/auto_create] is unauthorized for API key id [KbvCi3YB96EBa6C9k2Cm]
of user [fleet_enroll] on indices [.logs-endpoint.diagnostic.collection-default]
----

This message indicates that {elastic-endpoint} does not have the correct
permissions to send telemetry. This is a known problem in 7.11 that will be
fixed in an upcoming patch release. To remove this message from your logs, you
can turn off telemetry for the {endpoint-sec} integration until the next patch
release is available.

. In {kib}, go to **{fleet} > Integrations** and click the
**Installed integrations** tab.

. Click **{endpoint-sec}**, and then click the **Policies** tab to see all the
installed integrations. 

. Click the integration to edit it.

. Under advanced settings, set `windows.advanced.diagnostic.enabled`
to `false`, then save the integration.
