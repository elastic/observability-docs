[[ingest-management-troubleshooting]]
[role="xpack"]
= Troubleshoot common problems

beta[]

We have collected the most common known problems here. If your problem isn't
described here, please review open issues in the following GitHub repositories:

* https://github.com/elastic/kibana/issues[{kib}]
* https://github.com/elastic/beats/issues[{beats}]
* https://github.com/elastic/package-registry/issues[{package-registry}]

Have a question? Read our <<ingest-management-faq,FAQ>>, or contact us in the
{im-forum}[discuss forum]. Your feedback is very valuable to us.

[discrete]
[[fleet-not-in-kibana]]
== {fleet} is not listed in the {kib} side navigation

The {fleet} app is enabled by default. If you are unable to 
see the app in {kib}, make sure it's enabled.

**To enable {fleet} on {ecloud}:**

. Go to your deployment in the user console.

. Under the deployment name in the side navigation, click **Edit**.

. In the {kib} section, expand **User setting overrides** and enter the
following setting:
+
[source,yaml]
----
xpack.ingestManager.enabled: true
----

. Click **Save**.

{kib} will restart automatically. When {kib} is available, refresh the browser
to see the {fleet} app in the navigation menu.

**To enable {fleet} on a self-managed cluster:**

. In the {es} configuration file, `config/elasticsearch.yml`, set the following
security settings to enable security and API keys:
+
[source,yaml]
----
xpack.security.enabled: true
xpack.security.authc.api_key.enabled: true
----

. In the {kib} configuration file, `config/kibana.yml`, enable {fleet}
and specify user credentials:
+
[source,yaml]
----
xpack.ingestManager.enabled: true
xpack.ingestManager.fleet.tlsCheckDisabled: true <1>
xpack.security.enabled: true
elasticsearch.username: "elastic" <2>
elasticsearch.password: "abc123iUnbRftkABC123"
----
<1> This setting is not required if you configure TLS checking.
<2> Specify a user who is authorized to use {fleet}.

[TIP]
=====
To set up passwords, you can use the documented {es} APIs or the
`elasticsearch-setup-passwords` command. For example:

`./bin/elasticsearch-setup-passwords auto`
=====

After running the command, copy the Elastic user name to the {kib} config file.
Then restart {kib}.

[discrete]
[[ingest-management-setup-fails]]
== The `/api/ingest_management/setup` endpoint can't reach the package registry

In order to install {integrations}, the {fleet} app needs to connect to
an external service called the {package-registry}. For this to work, the {kib}
server must be able to connect to `https://epr.elastic.co` on port 443.

[discrete]
[[fleet-app-crashes]]
== {fleet} in {kib} crashes

To find more about the error, open your browser's development console, navigate
to the **Network** tab, and refresh the page. One of the requests to the
{fleet} API will most likely have returned an error. If the error
message doesn't give you enough information to fix the problem, please contact
us in the {im-forum}[discuss forum].

[discrete]
[[agent-enrollment-timeout]]
== {agent} enrollment fails on the host with `Client.Timeout exceeded` message

{agent} must be able to connect to the {kib} instance to enroll in {fleet}.
If the agent is unable to connect, you will see the following failure:

[source,output]
-----
fail to enroll: fail to execute request to {kib}:Post http://kibana:5601/api/ingest_manager/fleet/agents/enroll?: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
-----

This may occur if the host is unable to connect to {kib}. To troubleshoot the
problem:

. Check for networking problems. Run the `ping` command from the host to confirm
that it can reach the {kib} instance.

. Verify that the URL and port you specified during enrollment are correct for
your environment.

. Check the enrollment key that you specified during enrollment to confirm that
the key is valid. To do this:
.. In {fleet}, go to the **Agents** tab and click **Enrollment Tokens**. 
.. Click the eyeball icon to see the secret. The secret should match the string
that you used to enroll {agent} on your host.
.. If the secret doesn't match, create a new enrollment token and use the new
token when you run the `elastic-agent enroll` command.

[discrete]
[[es-apikey-failed]]
== {es} authentication service fails with `Authentication using apikey failed` message

{fleet} requires an encryption key in order to save API keys and encrypt them in
{kib}. To provide an API key, set the `xpack.encryptedSavedObjects.encryptionKey`
property in the `kibana.yml` configuration file. For example:

[source,yaml]
----
xpack.encryptedSavedObjects.encryptionKey: "something_at_least_32_characters"
----

[discrete]
[[process-not-root]]
== {agent} fails with `Agent process is not root/admin or validation failed` message

Make sure the user running {agent} has root privileges. If you're running
{agent} in the foreground (and not as a service) on Linux or macOS, run the
agent under the root user, for example, `sudo` or `su`. Some integrations
require root privileges to collect sensitive data.

If you're using the {elastic-endpoint-integration} integration, also make sure you're
running {agent} under the SYSTEM account.

TIP: If you install {agent} as a service as described in
<<elastic-agent-installation>>, {agent} runs under the SYSTEM account by
default.

To run {agent} under the SYSTEM account, you can:

. Download https://docs.microsoft.com/en-us/sysinternals/downloads/psexec[PsExec]
and extract the contents to a folder, for example, `d:\tools`.
. Open a command prompt as an Administrator (right-click the Command Prompt
icon and select *Run As Administrator*).
. From the command prompt, run {agent} under the SYSTEM account:
+
[source,sh]
----
d:\tools\psexec.exe -sid "C:\Program Files\Elastic-Agent\elastic-agent.exe" run
----

[discrete]
[[agent-hangs-while-unenrolling]]
== {agent} hangs while unenrolling

When you unenroll an agent, {fleet} waits for acknowledgement from the agent
before it completes the unenrollment process. If {fleet} doesn't receive
acknowledgement, the status hangs at `unenrolling.`

If this happens, select **Force unenroll** from the *Actions* menu in the
Agents list.

This will invalidate all API keys related to the agent and change the status to
`inactive` so that the agent no longer appears in {fleet}. 
