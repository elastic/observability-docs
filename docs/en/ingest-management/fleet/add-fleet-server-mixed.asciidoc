[[add-fleet-server-mixed]]
= Deploy {fleet-server} on-premises and {es} on Cloud

// intro

[discrete]
[[add-fleet-server-mixed-compatibility]]
== Compatibility

{fleet-server} is compatible with the following Elastic products:

* {stack} 7.13 or later
** For version compatibility: {es} >= {fleet-server} >= {agent} (except for
bugfix releases)
** {kib} should be on the same minor version as {es}

* {ece} 2.9 or later--allows you to use a hosted {fleet-server} on {ecloud}.
+
--
** Requires additional wildcard domains and certificates (which normally only
cover `*.cname`, not `*.*.cname`). This enables us to provide the URL for
{fleet-server} of `https://.fleet.`.
** The deployment template must contain an {integrations-server} node.
--
+
For more information about hosting {fleet-server} on {ece}, refer to
{ece-ref}/ece-manage-integrations-server.html[Manage your {integrations-server}].

[discrete]
[[add-fleet-server-mixed-prereq]]
== Prerequisites

Before setting up {fleet-server} using this approach, you will need a
Certificate Authority (CA) certificate to configure Transport Layer Security (TLS)
to encrypt traffic between the {fleet-server}s and {stack}.

If your organization already uses the {stack}, you may already have a CA certificate. If you do not have a CA certificate, you can read more
about generating one in <<secure-connections>>.

NOTE: This is not required when testing and iterating using the *Quick start* option, but should always be used for production deployments.

[discrete]
[[fleet-server-add-hosts]]
== Add {fleet-server} hosts

// What is it / why do you need it?
Start by adding one or more {fleet-server} hosts.
A {fleet-server} host is a URL your {agent}s will use to connect to a {fleet-server}.

// Prereqs
{fleet-server} hosts should meet the following requirements:

* All agents can connect to the host.
* The host also has a route to the {es} you plan to use, whether hosted by Elastic
or deployed on-premises.
// Need link to "minimum compute resource requirements"
* The host meets the minimum compute resource requirements based on the maximum number
of agents you plan to support in your deployment.

// How do you set it up?
To add a {fleet-server} host:

. In {kib}, go to *Management* -> *{fleet}* -> *Settings*.
For more information about these settings, see
{fleet-guide}/fleet-settings.html[{fleet} settings].
// lint ignore fleet-server
. Under *Fleet Server hosts*, click *Edit hosts* and specify one or more host
URLs your {agent}s will use to connect to {fleet-server}. For example,
`https://192.0.2.1:8220`, where `192.0.2.1` is the host IP where you will
install {fleet-server}. Save and apply your settings.
+
TIP: If the **Edit hosts** option is grayed out, {fleet-server} hosts
are configured outside of {fleet}. For more information, refer to
{kibana-ref}/fleet-settings-kb.html[{fleet} settings in {kib}].

. Save and apply the settings.

// image?

[discrete]
[[fleet-server-create-policy]]
== Create a {fleet-server} policy

// What is it / why do you need it?
Next, you'll create a {fleet-server} policy. The {fleet-server} policy manages
and configures the {agent} running on the {fleet-server} host to launch a
{fleet-server} process.

// How do you set it up?
To create a {fleet-server} policy:

. In {kib}, navigate to the **{fleet}** page and go to the **Agent policies** tab.
. Click on the **Create agent policy** button, then:
.. Provide a meaningful name for the policy that will help you identify this {fleet-server} (or cluster) in the future.
.. Ensure you select _Collect system logs and metrics_ so the compute system hosting this {fleet-server} can be monitored. (This is not required, but is highly recommended.)
. After creating the {fleet-server} policy, navigate to the policy itself and click **Add integration**.
. Search for and select the **{fleet-server}** integration.
. Then click **Add {fleet-server}**.
+
// image
. Configure the {fleet-server}:
.. Expand **Change default**. Because you are deploying this {fleet-server} on-premises,
you need to enter the _Host_ address and _Port_ number, `8220`.
(In our example the {fleet-server} will be installed on the host `10.128.0.46`.)
.. It's recommended that you also enter the _Max agents_ you intend to support with this {fleet-server}.
This can also be modified at a later stage.
This will allow the {fleet-server} to handle the load and frequency of updates being sent to the agent
and ensure a smooth operation in a bursty environment.

[discrete]
[[fleet-server-add-agents]]
== Add {fleet-server}s

// What is it / why do you need it?
Now that the policy exists, you can add {fleet-server}s.
A {fleet-server} is an {agent} that is enrolled in a {fleet-server} policy.
The policy configures the agent to operate in a special mode to serve as a {fleet-server} in your deployment.

// How do you set it up?
To add a {fleet-server}:

. Return to the {fleet-server} policy. If you've navigated away from the page, here's how you can get there:
.. In {kib} go to **{fleet}**.
.. Switch to the **Agent policies** tab.
.. Select the policy you created previously.

. Click **Add agent** and follow the instructions to add a {fleet-server}.
.. Choose the policy name for this deployment.
.. Choose **Production** as your deployment model.
+
Production mode is the fully secured mode where TLS certificates ensure a secure communication between {fleet-server} and {es}.
.. Select the {fleet-server} host that was identified earlier. Click **Add host**.
.. A **Service Token** is required so the {fleet-server} can write data to the connected {es} instance.
Click **Generate service token** and copy the generated token.
.. Copy the installation instructions provided in {kib}, which include some of the known deployment parameters.
.. Replace the value of the `--certificate-authorities` parameter with your <<add-fleet-server-mixed-prereq,CA certificate>>.

After {fleet-server} is installed and enrolled in {fleet},
the newly created {fleet-server} policy is applied.
You can see this on the {fleet-server} policy page:

// image

The {fleet-server} agent will also show up on the main {fleet} page as another agent
whose life-cycle can be managed (like other agents in the deployment):

// image

[discrete]
[[fleet-server-install-agents]]
== Next steps

Now you're ready to add {agent}s to your host systems. To learn how, see
<<install-fleet-managed-elastic-agent>>.

// Do we need the content below or can we use the content above to
// point to the same page we point to for the other approaches?

/////
// What is it / why do you need it?
{agents} in this deployment now need a TLS connection to the newly installed {fleet-server} instance for control plane
and additional secure connection to {es} to write user data.
You may follow the in-product installation steps with small modifications.

// How do you set it up?
To install {agents}:

. A valid certificate authority is required for connectivity to the
{fleet-server} that was installed in the previous sections.
.. Copy the `certs/ca.crt` from the previous section to a well known location on the host machine.
. Copy the installation instructions provided in {kib}, which include some of the known deployment parameters.
Add the `--certificate-authorities` option with the relevant <<add-fleet-server-mixed-prereq,certificates>>.
(This example uses the same host, `10.128.0.46`, and port, `8220`, as the previous examples.)
+
[source,sh]
----
> sudo ./elastic-agent install \ 
--url=https://10.128.0.46:8220 \ 
--enrollment-token=<enrollment token> \ 
--certificate-authorities=<PATH to CA>/ca/ca.crt
----

. You should now see the {agent} enrolled in {fleet}.
/////