[[fleet-server-scalability]]
= {fleet-server} scalability

This page summarizes the resource and {fleet-server} configuration
requirements needed to scale your deployment of {agent}s. To scale
{fleet-server}, you need to modify settings in your deployment and the
{fleet-server} agent policy.

First modify your {fleet} deployment settings in {ecloud}:

. Log in to {ecloud} and go to your deployment.

. Under *Deployments > _deployment name_*, click *Edit*.

. Under {integrations-server}:
+
--
* Modify the compute resources available to the server to accommodate a higher
scale of {agent}s
* Modify the availability zones to satisfy fault tolerance requirements

For recommended settings, refer to <<scaling-recommendations>>.

[role="screenshot"]
image::images/fleet-server-hosted-container.png[{fleet-server} hosted agent]
--

Next modify the {fleet-server} configuration by editing the agent policy: 

. In *{fleet}*, click *Agent Policies*. Click on the *{ecloud} agent policy* to
edit it.

. Open the *Actions* menu and select *Edit integration*.
+
[role="screenshot"]
image::images/elastic-cloud-agent-policy.png[{ecloud} policy]

. Under {fleet-server}, modify *Max Connections* and other
<<fleet-server-configuration,advanced settings>> as described in
<<scaling-recommendations>>. 
+
[role="screenshot"]
image::images/fleet-server-configuration.png[{fleet-server} configuration]

[discrete]
[[fleet-server-configuration]]
== Advanced {fleet-server} options

The following advanced settings are available to fine tune your {fleet-server}
deployment.

`cache`::

`num_counters`:::
Size of the hash table. Best practice is to have this set to 10 times the max
connections.

`max_cost`:::
Total size of the cache.

`server.limits`::
`policy_throttle`:::
How often a new policy is rolled out to the agents.

`checkin_limit.interval`:::
How fast the agents can check in to the {fleet-server}.

`checkin_limit.burst`:::
Burst of check-ins allowed before falling back to the rate defined by
`interval`.

`checkin_limit.max`:::
Maximum number of agents.

`artifact_limit.max`:::
Maximum number of agents that can call the artifact API concurrently. It allows
the user to avoid overloading the {fleet-server} from artifact API calls.

`artifact_limit.interval`:::
How often artifacts are rolled out. Default of `100ms` allows 10 artifacts to be
rolled out per second.

`artifact_limit.burst`:::
Number of transactions allowed for a burst, controlling oversubscription on
outbound buffer.

`ack_limit.max`:::
Maximum number of agents that can call the Ack API concurrently. It allows the
user to avoid overloading the {fleet-server} from Ack API calls.

`ack_limit.interval`:::
How often an acknowledgment (ACK) is sent. Default value of `10ms` enables 100
ACKs per second to be sent.

`ack_limit.burst`:::
Burst of ACKs to accommodate (default of 20) before falling back to the rate
defined in `interval`.

`enroll_limit.max`:::
Maximum number of agents that can call the Enroll API concurrently. This setting
allows the user to avoid overloading the {fleet-server} from Enrollment API
calls.

`enroll_limit.interval`:::
Interval between processing enrollment request. Enrollment is both CPU and RAM
intensive, so the number of enrollment requests needs to be limited for overall
system health. Default value of `100ms` allows 10 enrollments per second.

`enroll_limit.burst`:::
Burst of enrollments to accept before falling back to the rate defined by
`interval`.

[discrete]
[[scaling-recommendations]]
== Scaling recommendations ({ecloud})

The following tables provide resource requirements and scaling guidelines based
on the number of agents required by your deployment:

* <<resource-requirements-by-number-agents>>
* <<recommend-settings-scaling-agents>>

// TODO: Confirm that these recommendations are current. The values don't match
// the drop-down lists in the latest version of {ecloud}. 

[discrete]
[[resource-requirements-by-number-agents]]
=== Resource requirements by number of agents
|===
| Number of Agents | Memory       | vCPU           | {es} Cluster size
| 50               | 512 MB       | Up to 2.5 vCPU | 480 GB disk \| 16 GB RAM \| up to 5 vCPU
| 5,000            | 1 GB         | Up to 2.5 vCPU | 960 GB disk \| 32 GB RAM \| 5 vCPU
| 7,500            | 2 GB         | Up to 2.5 vCPU | 1.88 TB disk \| 64 GB RAM \| 9.8 vCPU
| 10,000           | 4 GB         | Up to 2.5 vCPU | 3.75 TB disk \| 128 GB RAM \| 19.8 vCPU
| 12,500           | 8 G          | Up to 2.5 vCPU | 7.5 TB disk \| 256 GB RAM \| 39.4 vCPU
| 30,000           | 16 GB        | 2.5 vCPU       | 7.5 TB disk \| 256 GB RAM \| 39.4 vCPU
| 50,000           | 32 GB        | 2.5 vCPU       | 11.25 TB disk \| 384 GB RAM \|59.2 vCPU
|===


[discrete]
[[recommend-settings-scaling-agents]]

=== Recommended settings by number of deployed {agent}s

TIP: You might need to scroll to the right to see all the table columns.

|===
|                      | *50*    | *5,000*  | *7,500*  | *10,000* | *12,500*  | *30,000*   | *50,000*
| *Max Connections*    | 100     | 7,000    | 10,000   | 20,000   | 32,000    | 32,000     | 32,000
8+s| Cache settings
| `num_counters`       | 2000    | 20000    | 40000    | 80000     | 160000    | 160000    | 320000
| `max_cost`           | 2097152 | 20971520 | 50971520 | 104857600 | 209715200 | 209715200 | 209715200
8+s| Server limits
| `policy_throttle`    | 200 ms   | 50 ms     | 10 ms     | 5 ms       | 5 ms       | 2 ms       | 5 ms
8+| `checkin_limit:`
>| `interval`          | 50 ms    | 5 ms      | 2 ms      | 1 ms       | 500 us     | 500 us     | 500 us
>| `burst`             | 25      | 500      | 1000     | 2000      | 4000      | 4000      | 4000
>| `max`               | 100     | 5001     | 7501     | 10001     | 12501     | 15001     | 25001
8+|`artifact_limit:`
>| `interval`          | 100 ms   | 5 ms      | 2 ms      | 1 ms       | 500 us     | 500 us     | 500 us
>| `burst`             | 10      | 500      | 1000     | 2000      | 4000      | 4000      | 4000
>| `max`               | 10      | 1000     | 2000     | 4000      | 8000      | 8000      | 8000
8+| `ack_limit:`
>| `interval`          | 10 ms    | 4 ms      | 2 ms      | 1 ms       | 500 us     | 500 us     | 500 us
>| `burst`             | 20      | 500      | 1000     | 2000      | 4000      | 4000      | 4000
>| `max`               | 20      | 1000     | 2000     | 4000      | 8000      | 8000      | 8000
8+| `enroll_limit:`
>| `interval`          | 100 ms   | 20 ms     | 10 ms     | 10 ms      | 10 ms      | 10 ms      | 10 ms
>| `burst`             | 5       | 50       | 100      | 100       | 100       | 100       | 100
>| `max`               | 10      | 100      | 200      | 200       | 200       | 200       | 200
8+s| Server runtime settings
| `gc_percent`         | 20      | 20       | 20       | 20        | 20        | 20        | 20
|===
