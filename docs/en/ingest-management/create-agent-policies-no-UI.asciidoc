[[create-a-policy-no-ui]]
= Create an agent policy without using the UI

For use cases where you want to provide a default agent policy or support
automation, you can set up an agent policy without using the {fleet} UI. To do
this, either use the {fleet} API or add a preconfigured policy to {kib}:

[discrete]
[[use-api-to-create-policy]]
== Option 1. Create an agent policy with the API

[source,sh]
----
curl -u <username>:<password> --request POST \
  --url <kibana_url>/api/fleet/agent_policies?sys_monitoring=true \
  --header 'content-type: application/json' \
  --header 'kbn-xsrf: true' \
  --data '{"name":"Agent policy 1","namespace":"default","monitoring_enabled":["logs","metrics"]}'
----

In this API call:

* `sys_monitoring=true` adds the system integration to the agent policy 
* `monitoring_enabled` turns on {agent} monitoring

[discrete]
[[use-preconfiguration-to-create-policy]]
== Option 2. Create agent policies with preconfiguration

Add preconfigured policies to `kibana.yml` config.

For example, the following example adds a {fleet-server} policy for
self-managed setup: 

[source,yaml]
----
xpack.fleet.packages:
  - name: fleet_server
    version: latest
xpack.fleet.agentPolicies:
  - name: Fleet Server policy
    id: fleet-server-policy
    namespace: default
    package_policies:
      - name: fleet_server-1
        package:
          name: fleet_server
----
          
The following example creates an agent policy for general use:

[source,yaml]
----
xpack.fleet.packages:
  - name: system
    version: latest
  - name: elastic_agent
    version: latest
xpack.fleet.agentPolicies:
  - name: Agent policy 1
    id: agent-policy-1
    namespace: default
    monitoring_enabled:
      - logs
      - metrics
    package_policies:
      - name: system-1
        id: default-system
        package:
          name: system
----

For more information about preconfiguration settings, refer to the
{kibana-ref}/fleet-settings-kb.html[{kib} documentation].
