[[ingest-management-getting-started]]
[role="xpack"]
= Quick start: Send logs and metrics to the {stack}

:release-state: released

++++
<titleabbrev>Quick start: send logs and metrics</titleabbrev>
++++

beta[]

//TODO: Improve intro before GA.
This guide describes how to use the {ingest-management} capabilities in
this release to collect data and send it to the {stack}.

For feedback and questions, please contact us in the {im-forum}[discuss forum].

[discrete]
[[ingest-manager-prereqs]]
== Prerequisites

Before you begin, please read <<ingest-management-limitations>>.

You need {es} for storing and searching your data, and {kib} for visualizing and
managing it. You can use our
https://www.elastic.co/cloud/elasticsearch-service[hosted {ess}]
on {ecloud} (recommended), or self-manage the {stack} on your own hardware.

Here's what you need for each deployment type:

include::tab-widgets/prereq-widget.asciidoc[]

[discrete]
[[install-integration]]
== Step 1: Add integrations

{ingest-manager} provides _integrations_ that bundle various assets needed to
ingest and visualize data.

In this guide, we assume that you have `nginx` running on some of your
infrastructure, and want to collect logs and metrics from it. To do so:

. Log in to {kib} and go to **Management > {ingest-manager}**.
+
[role="screenshot"]
image::images/kibana-ingest-manager-start.png[{ingest-manager} app in {kib}]

. In the {ingest-manager} app, click the **Integrations** tab and use the
search bar to find the Nginx integration.
+
[role="screenshot"]
image::images/kibana-ingest-manager-integrations-nginx.png[{ingest-manager} app showing Nginx integration]
. Click the Nginx integration to see more details about it, and then click
**Add Nginx**.
+
[role="screenshot"]
image::images/kibana-ingest-manager-integrations-nginx-overview.png[{ingest-manager} app showing Nginx integration overview]

. On the **Add Nginx integration** page, click the default Agent configuration
to select it, then scroll down to inspect or change the default settings.

. If your logs are not in the default location, click the down arrow next to
enabled streams and change the **Paths** field. 

. When you're done, click **Save integration**. 
+
[role="screenshot"]
image::images/kibana-ingest-manager-integrations-nginx-add-datasource.png[{ingest-manager} app Add data source screen]

. To verify that the integration is installed, click the **Integrations** tab
and then click **Installed Integrations**.
+
The Nginx integration has been installed and should show up in this list. Note
that the **System** and **Elastic Endpoint Security** integrations are installed
by default.
+
[role="screenshot"]
image::images/kibana-ingest-manager-integrations-list-installed.png[{ingest-manager} app showing installed integrations]

. Select the **Configurations** tab, and in the Agent configurations list, click
the default config.
+
The newly added Nginx integration should appear on the **Ingegrations** tab.
Note that the `system-1` integration has been created by default.
+
[role="screenshot"]
image::images/kibana-ingest-manager-configurations-default-with-nginx.png[{ingest-manager} app showing default Agent configuration with nginx-1 datasource]

[discrete]
[[install-run-elastic-agent]]
== Step 3: Install and run {agent}

include::{beats-repo-dir}/x-pack/elastic-agent/docs/elastic-agent.asciidoc[tag=agent-install-intro]

include::{beats-repo-dir}/x-pack/elastic-agent/docs/install-elastic-agent.asciidoc[tag=install-elastic-agent]

To configure {agent}, you can use the {ingest-manager} app in {kib} (see
<<agent-fleet-mode,{fleet} mode>>), or configure it manually (see
<<agent-standalone-mode, Standalone mode>>).

[discrete]
[[agent-fleet-mode]]
=== {fleet} mode

To use {fleet} to configure {agent}:

//REVIEWERS: I'm leaving the installation steps in this flow earlier because
//I don't the instructions on the download page are not complete wrt platforms.
//This section will be a little awkward until we get that fixed.

. Enable {fleet} in the {ingest-manager} app. To do so, click the **{fleet}**
tab and click **Create user and enable Fleet**.
+
[role="screenshot"]
image::images/kibana-ingest-manager-fleet-enable.png[{ingest-manager} app showing prompt to enable {fleet}]

. On the **Fleet** tab, click **Add agent** and complete the steps under
**Enroll with Fleet**. Skip the first step because you downloaded the Agent earlier.

. Select an Agent configuration (or accept the default).

. Copy the command for enrolling the Agent.
+
The copied command contains your {kib} URL and an enrollment key that was
generated by the {ingest-manager} app.
+
[role="screenshot"]
image::images/kibana-ingest-manager-fleet-enrol.png[{ingest-manager} app showing Agent enrollment dialog]

. In the directory where you installed {agent}, run the copied command to
enroll the Agent. Note that this command will overwrite the `elastic-agent.yml`
file in that directory.
+
["source","sh",subs="attributes"]
----
./elastic-agent enroll KIBANA_URL ENROLLMENT_KEY

This will replace your current settings. Do you want to continue? [Y/n]:
----

. Run the Agent:
+
--
// tag::run-agent[]
[source,shell]
----
./elastic-agent run <1>
----
<1> On Windows, you must run {agent} under the SYSTEM account if you plan
to use the {elastic-endpoint} integration.
// end::run-agent[]
--

. In the {ingest-manager} app, click **Continue** to go to the **{fleet}**
tab, where you should see the newly enrolled Agent.
+
[role="screenshot"]
image::images/kibana-ingest-manager-fleet-agents.png[{ingest-manager} app showing enrolled Agents]

If you run into problems, see <<ingest-management-troubleshooting>>.

TIP: To unenroll an Agent, choose **Unenroll** from the **Actions**
menu for the Agent. This will invalidate the API key the Agent uses to
connect to {es}. The {agent} will continue to run, but will not be able to send
data. It will show this error instead:
`invalid api key to authenticate with fleet`.

[discrete]
[[agent-standalone-mode]]
=== Standalone mode (manual configuration)

To configure {agent} manually:

. On the **Fleet** tab, click **Add agent** and complete the steps under
**Standalone mode**. Skip the first step because you downloaded the Agent
earlier.

. Select an Agent configuration (or accept the default).

. Copy the content of the agent configuration and put it into a file named
`elastic-agent.yml` on the system where {agent} is installed.
+
[role="screenshot"]
image::images/kibana-ingest-manager-configurations-default-yaml.png[{ingest-manager} app showing default Agent configuration in YAML format]
+
NOTE: The configuration file generated by the {ingest-manager} app already
contains the correct {es} address and port for your setup. If you run everything
locally, the address is `127.0.0.1:9200`. If you use our
https://www.elastic.co/cloud/elasticsearch-service[hosted {ess}] on
{ecloud}, the address corresponds to the {es} endpoint URL that is listed
under **Endpoints** as described in
{cloud}/ec-working-with-elasticsearch.html[Work with {es}].

. Change the {es} username and password in the `outputs` section of the
configuration file:
+
[source,yaml]
----
[...]
outputs:
  default:
    type: elasticsearch
    hosts:
      - 'HOST:PORT'
    username: ES_USERNAME
    password: ES_PASSWORD
datasources:
[...]
----


. Run {agent}:
+
--
include::getting-started.asciidoc[tag=run-agent]
--

[discrete]
[[view-data]]
== Step 4: View your data

In the {ingest-manager} app, click the **Datasets** tab to inspect the data
that is sent by the Agent. From the **Actions** column, you can navigate to the
dashboards corresponding to the data type that is sent.

[role="screenshot"]
image::images/kibana-ingest-manager-datastreams.png[{ingest-manager} app showing data streams list]

//Adding this section for future use. Might be premature to add this for the
//beta release.

//[discrete]
//== What's next?

//Now that you have your logs streaming into {es}, learn how to unify your logs,
//metrics, uptime, and application performance data. Use the Observability apps in
//{kib} to search across all your data.

// Add Javascript and CSS for tabbed panels
include::tab-widgets/code.asciidoc[]
