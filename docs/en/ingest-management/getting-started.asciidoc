[[fleet-quick-start]]
[role="xpack"]
= Quick start: Get logs, metrics, and uptime data into the {stack}

beta[]

This guide describes how to:

* Set up {fleet}
* Send data to the {stack} using {agent}
* Monitor logs and metrics from systems and services across your organization
* Monitor the availability of your HTTP, TCP, and ICMP services using the Synthetics integration
* Monitor Nginx logs and metrics using the Nginx integration

For feedback and questions, please contact us in the {forum}[discuss forum].

[discrete]
[[fleet-prereqs]]
== Prerequisites

* Please read <<fleet-limitations>>.

* You need {es} for storing and searching your data, and {kib} for visualizing and
managing it. You can use our
{ess-product}[hosted {ess}]
on {ecloud} (recommended), or self-manage the {stack} on your own hardware.
+
Here's what you need for each deployment type:
+
--
include::{tab-widgets}/prereq-widget.asciidoc[]
--

[discrete]
[[set-up-fleet]]
== Step 1: Set up {fleet}

Use {fleet} in {kib} to get logs, metrics, and security data into the {stack}.

TIP: Not using {fleet}? Advanced users who want to configure and manage
{agent}s manually can <<run-elastic-agent-standalone,run agents standalone>>.

The first time you use {fleet}, you might need to set it up and add a
{fleet-server}:

include::{tab-widgets}/add-fleet-server/widget.asciidoc[]

For more information, see <<fleet-server>>.

[discrete]
[[add-agent-to-fleet]]
== Step 2: Add an {agent} to {fleet}

include::elastic-agent/elastic-agent.asciidoc[tag=agent-install-intro]

To send logs and metrics to the {stack}:

// tag::agent-enroll[]
. On the **Agents** tab in {fleet}, click **Add agent**.

. Under **Enroll in {fleet}**, follow the in-product installation steps.
+
[role="screenshot"]
image::images/add-agent.png[]
+
See the https://www.elastic.co/downloads/elastic-agent[download page] for other
installation options.

*Notes:*


* Use the default agent policy to get started quickly. This policy includes a
system integration for collecting logs and metrics from the host system. You
can change the policy later.

* The `install` command installs the {agent} as a managed service, enrolls it
in the selected policy, and starts the service. For example:
+
[source, yaml]
----
./elastic-agent install -f --url=https://10.0.2.2:8220 \
--enrollment-token=blJqaUdua0JqYXA0bmNscVVjUkE6ZGh4WWNRSHRRek9aSS1paEs2cHdFQQ==
----
+
* Because {agent} is installed as an auto-starting service, it will restart
automatically if the system is rebooted. 

* To see where files are installed, see <<installation-layout>>. 

If installation is successful, you’ll see the agent on the *Agents*
tab in *Fleet*. Notice that the Default policy is assigned to the
agent.

[role="screenshot"]
image::images/kibana-fleet-agents.png[{fleet} showing enrolled agents]

TIP: If the status hangs at Enrolling, make sure the `elastic-agent` process
is running.

If you run into problems, see <<fleet-troubleshooting>>.
// end::agent-enroll[]
[discrete]
[[view-data]]
== Step 3: Monitor host logs and metrics

Next, view the data sent by {agent}. Right now, {agent} is only sending data
about the host system because you haven't configured the agent to collect data
from other sources yet.

To see host logs and metrics:

. In {fleet}, click the **Data streams** tab.
. In the **Actions** column, navigate to the dashboards corresponding
to the data stream. For example, to see host metrics, select one of the system
datasets:
+
[role="screenshot"]
image::images/kibana-fleet-datastreams.png[{fleet} showing data streams list]
+
Then navigate to the [Metrics System] Host overview dashboard:
+
[role="screenshot"]
image::images/host-metrics.png[Host overview dashboard in {kib}]

[discrete]
[[add-synthetics-integration]]
== Step 4: Monitor HTTP, TCP, and ICMP services
[discrete]

beta[] Next, you’ll add the Elastic Synthetics integration, enabling you to monitor the
status and response times of applications and services in real time. You can monitor
the availability of network endpoints via HTTP, TCP, or ICMP.

Add the Elastic Synthetics integration to the default policy used by your agent.
You use policies to manage settings across a group of agents. An agent policy may
contain any number of integrations for collecting observability data from the various
services running on your host.

. In {kib}, go back to **Management > {fleet}**, and click the **Integrations**
tab. Use the search bar to find the Elastic Synthetics integration.
+
[role="screenshot"]
image::images/kibana-fleet-integrations-synthetics.png[{fleet} showing Synthetics integration]
. Click the Elastic Synthetics integration to see more details about it, then click
**Add Elastic Synthetics**.
+
[role="screenshot"]
image::images/kibana-fleet-integrations-synthetics-overview.png[{fleet} showing Synthetics integration overview]

. On the **Add Elastic Synthetics integration** page, select the `default policy`.
+
****
In this guide, you add integrations to the default policy created by
{kib}. After you learn the basics, you can create your own policies and assign
them to agents.
****
+
[role="screenshot"]
image::images/add-synthetics-integration.png[{fleet} Add Synthetics integration page]

. Under **Configure integration**, enter the integration name and select *HTTP* from the following monitor types:
+
|=== 

| *HTTP* | Connects via HTTP and verifies that the host returns the expected response.

For detailed information
about HTTP options, see our {heartbeat-ref}/monitor-http-options.html[Heartbeat] documentation.

| *TCP* | Connects via TCP and verifies the endpoint by sending and receiving a custom payload.
By default, the hostname and port are required.

For detailed information about TCP options, see our
{heartbeat-ref}/monitor-tcp-options.html[Heartbeat] documentation.

| *ICMP* | Uses an ICMP `v4` and `v6` Echo Request to ping the configured hosts. By default,
the host name is required.

For detailed information about ICMP options, see our
{heartbeat-ref}/monitor-icmp-options.html[Heartbeat] documentation.

|===

. Enter the URL you want to monitor for availability and select a monitor interval in seconds or minutes. By default, a monitoring
schedule of every 3 minutes is selected.

. The *HTTP* and *TCP* monitor types both support TLS. Under *TLS settings*, select *Enable
TLS configuration*. Click the down arrow next to advanced HTTP or TCP options, and then
enter your required settings.

. When you're done, click *Save integration* to deploy the changes.

. To see the updated policy, click the *Policies* tab, then click the
*Default policy* link.
+
The newly added Elastic Synthetics integration should appear under **Integrations** in the
default policy, along with the `system-1` integration.
+
[role="screenshot"]
image::images/kibana-fleet-policies-default-with-synthetics.png[{fleet} showing default agent policy with synthetics-1 datasource]
+
All {agent}s that use this policy will collect logs, metrics, and uptime data from the host.

. To view the data in the {observability-guide}/view-monitor-status.html[Uptime app], go to
**Observability > Uptime**.

[discrete]
[[add-nginx-integration]]
== Step 5: Monitor Nginx logs and metrics
[discrete]

Next, you'll browse a catalog of integrations, then add an Nginx integration to
the default policy used by your agent.

NOTE: For these steps, we assume that you have `nginx` running on some of your
infrastructure, and want to collect logs and metrics from it.

. In {kib}, go back to **Management > {fleet}**, and click the **Integrations**
tab. Use the search bar to find the Nginx integration.
+
[role="screenshot"]
image::images/kibana-fleet-integrations-nginx.png[{fleet} showing Nginx integration]
. Click the Nginx integration to see more details about it, then click
**Add Nginx**.
+
[role="screenshot"]
image::images/kibana-fleet-integrations-nginx-overview.png[{fleet} showing Nginx integration overview]

. On the **Add Nginx integration** page, select the default policy.
+
In this guide, you add integrations to the default policy created by
{kib}. After you learn the basics, you can create your own policies and assign
them to agents.
+
[role="screenshot"]
image::images/add-integration.png[{fleet} Add Nginx integration page]

. Under **Configure integration**, click the down arrow next to enabled streams
and make sure the **Paths** are correct for your host. Inspect or change other
settings

. When you're done, save and deploy the changes.

. To see the updated policy, click the *Policies* tab, then click the
*Default policy* link.
+
The newly added Nginx integration should appear under **Integrations** in the
default policy, along with the `system-1` and `synthetics-1` integrations.
+
[role="screenshot"]
image::images/kibana-fleet-policies-default-with-nginx.png[{fleet} showing default agent policy with nginx-1 datasource]
+
All {agent}s that use this policy will collect logs and metrics from the
Nginx server and the host, along with uptime data.

. To view the data, click the **Data streams** tab.

. In the **Actions** column, navigate to the dashboards corresponding
to the data stream.

//TODO: Add dashboard.


[discrete]
== What's next?

* Now that data is streaming into the {stack}, take your investigation to a
deeper level! Use https://www.elastic.co/observability[Elastic {observability}]
to unify your logs, metrics, uptime, and application performance data.

* Want to protect your endpoints from security threats? Try
https://www.elastic.co/security[{elastic-sec}]. Adding endpoint protection is
just another integration that you add to the agent policy!

* Are your eyes bleary from staring at a wall of screens?
{observability-guide}/create-alerts.html[Create alerts] and find out about
problems while sipping your favorite beverage poolside.

* Want Elastic to do the heavy lifting? Use machine learning to
{observability-guide}/inspect-log-anomalies.html[detect anomalies].

* Got everything working like you want it? Roll out your agent policies to
other hosts by deploying {agent}s across your infrastructure!

// Add Javascript and CSS for tabbed panels
include::{tab-widgets}/code.asciidoc[]
