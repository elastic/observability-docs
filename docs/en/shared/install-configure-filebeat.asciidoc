[discrete]
= Install {filebeat}

Download and install {filebeat}.

include::{beats-repo-dir}/tab-widgets/install-widget-filebeat.asciidoc[]

[discrete]
= Set up assets

{filebeat} comes with predefined assets for parsing, indexing, and visualizing your data.
Run the following command to load these assets. It may take a few minutes.

[source,bash]
----
./filebeat setup -e -E 'cloud.id=YOUR_DEPLOYMENT_CLOUD_ID' -E 'cloud.auth=elastic:YOUR_SUPER_SECRET_PASS' <1>
----
<1> Substitute your Cloud ID and an administrator's `username:password` in this command.
To find your Cloud ID, click on your https://cloud.elastic.co/deployments[deployment].

[IMPORTANT]
====
Setting up {filebeat} is an admin-level task that requires extra privileges.
As a best practice, {filebeat-ref}/privileges-to-setup-beats.html[use an administrator role to set up]
and a more restrictive role for event publishing (which you will do next).
====

[discrete]
= Configure {filebeat} output

Next, you are going to configure {filebeat} output to {ess}.

. Use the {filebeat} keystore to store {filebeat-ref}/keystore.html[secure settings].
Store the Cloud ID in the keystore.
+
[source,bash]
----
./filebeat keystore create
echo -n "<Your Deployment Cloud ID>" | ./filebeat keystore add CLOUD_ID --stdin
----

. To store logs in {es} with minimal permissions, create an API key to send
data from {filebeat} to {ess}. Log into {kib} (you can do so from the Cloud
Console without typing in any permissions) and select *Management* -> *Dev
Tools*. Send the following request:
+
[source,console]
----
POST /_security/api_key
{
  "name": "filebeat-monitor-gcp",
  "role_descriptors": {
    "filebeat_writer": {
      "cluster": [
        "monitor",
        "read_ilm",
        "cluster:admin/ingest/pipeline/get", <1>
        "cluster:admin/ingest/pipeline/put" <1>
      ],
      "index": [
        {
          "names": ["filebeat-*"],
          "privileges": ["view_index_metadata", "create_doc"]
        }
      ]
    }
  }
}
----
+
<1> {filebeat} needs extra cluster permissions to publish logs, which differs
from the {metricbeat} configuration. You can find more
details {filebeat-ref}/feature-roles.html[here].

. The response contains an `api_key` and an `id` field, which can be stored in
the {filebeat} keystore in the following format: `id:api_key`.
+
[source,bash]
----
echo -n "IhrJJHMB4JmIUAPLuM35:1GbfxhkMT8COBB4JWY3pvQ" | ./filebeat keystore add ES_API_KEY --stdin
----
+
[NOTE]
=====
Make sure you specify the `-n` parameter; otherwise, you will have
painful debugging sessions due to adding a newline at the end of
your API key.
=====

. To see if both settings have been stored, run the following command:
+
[source,bash]
----
./filebeat keystore list
----

. To configure {filebeat} to output to {ess}, edit the `filebeat.yml`
configuration file. Add the following lines to the end of the file.
+
[source,yml]
----
cloud.id: ${CLOUD_ID}
output.elasticsearch:
  api_key: ${ES_API_KEY}
----

. Finally, test if the configuration is working. If it is not working,
verify that you used the right credentials and, if necessary, add them again.
+
[source,bash]
----
./filebeat test output
----