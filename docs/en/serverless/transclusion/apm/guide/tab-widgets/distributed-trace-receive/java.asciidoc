. Create a transaction as a child of the incoming transaction with
{apm-java-ref}/public-api.html#api-transaction-inject-trace-headers[`startTransactionWithRemoteParent()`].
. Start and name the transaction with {apm-java-ref}/public-api.html#api-transaction-activate[`activate()`]
and {apm-java-ref}/public-api.html#api-set-name[`setName()`].

Example:

[source,java]
----
// Hook into a callback provided by the framework that is called on incoming requests
public Response onIncomingRequest(Request request) throws Exception {
    // creates a transaction representing the server-side handling of the request
    Transaction transaction = ElasticApm.startTransactionWithRemoteParent(request::getHeader, request::getHeaders);   <1>
    try (final Scope scope = transaction.activate()) {   <2>
        String name = "a useful name like ClassName#methodName where the request is handled";
        transaction.setName(name);   <3>
        transaction.setType(Transaction.TYPE_REQUEST);   <4>
        return request.handle();
    } catch (Exception e) {
        transaction.captureException(e);
        throw e;
    } finally {
        transaction.end();   <5>
    }
}
----

<1> Create a transaction as the child of a remote parent

<2> Activate the transaction

<3> Name the transaction

<4> Add a transaction type

<5> Eventually, end the transaction
