. Start a transaction with {apm-java-ref}/public-api.html#api-start-transaction[`startTransaction`],
or a span with {apm-java-ref}/public-api.html#api-span-start-span[`startSpan`].
. Inject the `traceparent` header into the request object with
{apm-java-ref}/public-api.html#api-transaction-inject-trace-headers[`injectTraceHeaders`]

Example of manually instrumenting an RPC framework:

[source,java]
----
// Hook into a callback provided by the RPC framework that is called on outgoing requests
public Response onOutgoingRequest(Request request) throws Exception {
  Span span = ElasticApm.currentSpan()   <1>
          .startSpan("external", "http", null)
          .setName(request.getMethod() + " " + request.getHost());
  try (final Scope scope = transaction.activate()) {
      span.injectTraceHeaders((name, value) -> request.addHeader(name, value));   <2>
      return request.execute();
  } catch (Exception e) {
      span.captureException(e);
      throw e;
  } finally {
      span.end();   <3>
  }
}
----

<1> Create a span representing an external call

<2> Inject the `traceparent` header into the request object

<3> End the span
