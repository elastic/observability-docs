[[collect-data-with-native-otlp]]
= Quickstart: Send data to the Elastic Cloud Managed OTLP Endpoint

preview::[]

In this quickstart guide, you'll learn how to use the Elastic Cloud Managed OTLP Endpoint to send logs, metrics, and traces to Elastic.

[discrete]
== What is the Elastic Cloud Managed OTLP endpoint?

The Managed OTLP Endpoint is a fully managed offering exclusively for Elastic Cloud users (initially available in Elastic Cloud Serverless only) that simplifies OpenTelemetry data ingestion. It provides an endpoint for OpenTelemetry SDKs and Collectors to send telemetry data, with Elastic handling scaling, data processing, and storage.

This endpoint is designed for the following use cases:

* Logs & Infrastructure Monitoring: Logs forwarded in OTLP format and host and Kubernetes metrics in OTLP format.
* APM: Application telemetry in OTLP format.

[%collapsible]
.Differences from the existing Elastic APM Endpoint
====
The Elastic Cloud Managed OTLP Endpoint ensures that OpenTelemetry data is stored without any schema translation, preserving both OpenTelemetry semantic conventions and resource attributes. It supports ingesting OTLP logs, metrics, and traces in a unified manner, ensuring consistent treatment across all telemetry data. This marks a significant improvement over the {observability-guide}/apm-open-telemetry.html[existing functionality], which primarily focuses on traces and the APM use case.
====

[discrete]
== Prerequisites

* An {obs-serverless} project. To learn more, refer to <<observability-create-an-observability-project>>.
* A system forwarding logs, metrics, or traces in OTLP (any OTel Collector or SDKâ€”EDOT or community).

[discrete]
=== Limitations

* The OTLP endpoint only supports histograms with delta temporality. Cumulative histograms are dropped.
* Latency distributions based on histogram values have limited precision due to the fixed boundaries of explicit bucket histograms.
* Per-project rate limits apply. If you hit this limit, reach out to our https://support.elastic.co[support team].

[discrete]
== Get started

[discrete]
=== Get your native OTLP endpoint credentials

. <<observability-create-an-observability-project,Create a new {obs-serverless} project>>, or open an existing one.

. In your {obs-serverless} project, go to **Add Data**.

. Under **What do you want to monitor?** select **Application**, and then under **Monitor your application using** select **OpenTelemetry**.
+
NOTE: Follow this flow for all use cases, including logs and infrastructure monitoring.

. Copy the `OTEL_EXPORTER_OTLP_ENDPOINT` URL. Replace `.apm` with `.ingest` and save this value for later.

[discrete]
=== Create an API key

. Click "Create an API Key" to generate a new API key. Copy this value for later.
. (Optional) Test your new API key. You can do this by sending an empty JSON object to the `/v1/traces` endpoint. For example:
+
[source,bash]
----
curl -X POST \
  -H "Content-Type: application/json" \
  -H "Authorization: ApiKey <api-key>" \
  https://{YOUR_CLUSTER}.ingest.us-east-1.aws.elastic.cloud:443/v1/traces \
  -d '{}'
----
+
The response should be similar to:
+
[source,txt]
----
{"partialSuccess":{}}%  
----

[discrete]
=== Send data to your Elastic Cloud Managed OTLP endpoint

* <<otel-sdk-running>>
* <<no-sdk-running>>
* <<instrumentation-please>>

[discrete]
[[otel-sdk-running]]
==== I have an OTel Collector/SDK running

If you have an OpenTelemetry Collector or SDK exporting telemetry data,
configure it with the endpoint and API key generated in the previous steps.

**OpenTelemetry Collector configuration**

Configure your OTel Collector as follows:

[source,yaml]
----
exporters:
  otlp:
    endpoint: "https://my_cluster.ingest.us-east-1.aws.elastic.cloud:443/v1/traces"
    headers: "Authorization": "ApiKey <api-key-value-here>"
----

For more information, see
https://opentelemetry.io/docs/collector/configuration/[OTLP Collector configuration]

**Elastic Distributions of OpenTelemetry (EDOT) Collector configuration**

Configure an EDOT Collector using the same method described above in **OpenTelemetry Collector configuration**.
See the https://elastic.github.io/opentelemetry/edot-collector/index.html[EDOT Language SDK documentation] for more information.

**OpenTelemetry SDK configuration**

Configure your OTel SDK with the following environment variables:

* Elastic Cloud Managed OTLP endpoint: `OTEL_EXPORTER_OTLP_ENDPOINT` 
* Elastic API key: `OTEL_EXPORTER_OTLP_HEADERS`

For example:

[source,terminal]
----
export OTEL_EXPORTER_OTLP_ENDPOINT="https://my-api-endpoint:443"
export OTEL_EXPORTER_OTLP_HEADERS="Authorization=ApiKey <api-key>"
----

For more information, see
https://opentelemetry.io/docs/languages/sdk-configuration/otlp-exporter/[OTLP Exporter configuration].

**Elastic Distributions of OpenTelemetry (EDOT) SDK configuration**

Configure an EDOT SDK using the same method described above in **OpenTelemetry SDK configuration**.
See the https://elastic.github.io/opentelemetry/edot-sdks/index.html[EDOT Language SDK documentation] for more information.

[discrete]
[[no-sdk-running]]
==== I need an OTel Collector/SDK

Don't have a collector or SDK running? No problem. Spin up an EDOT collector in just a few steps:

* https://elastic.github.io/opentelemetry/quickstart/serverless/k8s.html[Kubernetes Quickstart]
* https://elastic.github.io/opentelemetry/quickstart/serverless/hosts_vms.html[Hosts & VMs Quickstart]

// Commenting out Docker until the docs are ready
// * https://elastic.github.io/opentelemetry/quickstart/serverless/docker.html[Docker Quickstart]

[discrete]
[[instrumentation-please]]
==== I just want to use the instrumentation

Docs coming soon to https://elastic.github.io/opentelemetry/use-cases/application/
Just send data to your Elastic Cloud Managed OTLP endpoint. That's it. 

[discrete]
== Troubleshoot

**Api Key prefix not found**

The following error is due to an improperly formatted API key:

[source,terminal]
----
Exporting failed. Dropping data.
{"kind": "exporter", "data_type": }
"Unauthenticated desc = ApiKey prefix not found"
----

You must format your API key as `"Authorization": "ApiKey <api-key-value-here>"` or `"Authorization=ApiKey <api-key>"` depending on whether you're using a collector or SDK. See <<otel-sdk-running>> for more information.

[discrete]
== Provide feedback

We love to hear from you!
Help improve the Elastic Cloud Managed OTLP Endpoint by sending us feedback in our https://discuss.elastic.co/c/apm[discussion forum] or https://elasticstack.slack.com/signup#/domain-signup[community Slack].

For EDOT collector feedback, please open an issue in the https://github.com/elastic/elastic-agent/issues[elastic-agent repository].

[discrete]
== What's next?

Visualize your OpenTelemetry data. Learn more in <<otlp-visualize>>.
