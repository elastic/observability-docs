[[logs-stream]]
= Stream any log file

This guide shows you how to send a log file to Elasticsearch using a standalone {agent} and configure the {agent} and your data streams using the `elastic-agent.yml` file, and query your logs using the data streams you've set up.

[discrete]
[[logs-stream-prereq]]
= Prerequisites

include::logs-metrics-get-started.asciidoc[tag=monitoring-prereqs]

[discrete]
[[logs-stream-install-config-agent]]
= Install and configure the standalone {agent}

Complete these steps to install and configure the standalone {agent} and send your log data to {es}:

. <<logs-stream-extract-agent, Download and extract the {agent} installation package.>>
. <<logs-stream-install-agent, Install and start the {agent}.>>
. <<logs-stream-agent-config, Configure the {agent}.>>

[discrete]
[[logs-stream-extract-agent]]
== Step 1: Download and extract the {agent} installation package

On your host, download and extract the installation package that corresponds with your system:

include::{ingest-docs-root}/docs/en/ingest-management/tab-widgets/download-widget.asciidoc[]

[discrete]
[[logs-stream-install-agent]]
== Step 2: Install and start the {agent}
After downloading and extracting the installation package, you're ready to install the {agent}. From the agent directory, run the install command that corresponds with your system:

NOTE: On macOS, Linux (tar package), and Windows, run the `install` command to
install and start {agent} as a managed service and start the service. The DEB and RPM
packages include a service unit for Linux systems with
systemd, For these systems, you must enable and start the service.

include::{ingest-docs-root}/docs/en/ingest-management/tab-widgets/run-standalone-widget.asciidoc[]

During installation, you're prompted with some questions:

. When asked if you want to install the agent as a service, enter `Y`.
. When asked if you want to enroll the agent in Fleet, enter `n`.

[discrete]
[[logs-stream-agent-config]]
== Step 3: Configure the {agent}

With your agent installed, configure it by updating the `elastic-agent.yml` file.

[discrete]
[[logs-stream-yml-location]]
=== Locate your configuration file

After installing the agent, you'll find the `elastic-agent.yml` in one of the following locations according to your system:

include::tab-widgets/logs/agent-location-widget.asciidoc[]

[discrete]
[[logs-stream-example-config]]
=== Update your configuration file

The following is an example of a standalone {agent} configuration. To configure your {agent}, replace the contents of the `elastic-agent.yml` file with this configuration:

[source,yaml]
----
outputs:
  default:
    type: elasticsearch
    hosts: '<your-elasticsearch-endpoint>:<port>'
    api_key: 'your-api-key'
inputs:
  - id: your-log-id
    type: filestream
    streams:
      - id: your-log-stream-id
        data_stream:
          dataset: example
        paths:
          - /var/log/your-logs.log
----

Next, set the values for these fields:

- `hosts` – Copy the {es} endpoint from *Help menu (image:images/help-icon.png[]) → Connection details*. For example, `https://my-deployment.es.us-central1.gcp.cloud.es.io:443`.
- `api-key` – Use an API key to grant the agent access to {es}. To create an API key for your agent, refer to the {fleet-guide}/grant-access-to-elasticsearch.html#create-api-key-standalone-agent[Create API keys for standalone agents] documentation.
+
NOTE: The API key format should be `<id>:<key>`. Make sure you selected *Beats* when you created your API key. Base64 encoded API keys are not currently supported in this configuration.
- `inputs.id` – A unique identifier for your input.
- `type` – The type of input. For collecting logs, set this to `filestream`.
- `streams.id` – A unique identifier for your stream of log data.
- `data_stream.dataset` – The name for your dataset data stream. Name this data stream anything that signifies the source of the data. In this configuration, the dataset is set to `example`. The default value is `generic`.
- `paths` – The path to your log files. You can also use a pattern like `/var/log/your-logs.log*`.

[discrete]
[[logs-stream-restart-agent]]
=== Restart the {agent}

After updating your configuration file, you need to restart the {agent}:

First, stop the {agent} and its related executables using the command that works with your system:

include::{ingest-docs-root}/docs/en/ingest-management/tab-widgets/stop-widget.asciidoc[]

Next, restart the {agent} using the command that works with your system:

include::{ingest-docs-root}/docs/en/ingest-management/tab-widgets/start-widget.asciidoc[]

[discrete]
[[logs-stream-troubleshooting]]
= Troubleshoot your {agent} configuration

If you're not seeing your log files in {kib}, verify the following in the `elastic-agent.yml` file:

- The path to your logs file under `paths` is correct.
- Your API key is in `<id>:<key>` format. If not, your API key may be in an unsupported format, and you'll need to create an API key in *Beats* format.

If you're still running into issues, see {fleet-guide}/fleet-troubleshooting.html[{agent} troubleshooting] and {fleet-guide}/elastic-agent-configuration.html[Configure standalone Elastic Agents].

[discrete]
[[logs-stream-next-steps]]
= Next steps

After you have your agent configured and are streaming log data to {es}:

- Refer to the <<logs-parse>> documentation for information on extracting structured fields from your log data, rerouting your logs to different data streams, and filtering and aggregating your log data.
- Refer to the <<logs-filter-and-aggregate>> documentation for information on filtering and aggregating your log data to find specific information, gain insight, and monitor your systems more efficiently.