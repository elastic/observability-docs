[chapter, role="xpack"]
[[ingest-metrics]]

:beatname_uc: Metricbeat
:beatname_lc: metricbeat
:beatname_pkg: {beatname_lc}
:beatname_url: {beats-ref-root}/{beatname_lc}/{branch}
:modulename: apache mysql
:has_modules_command:

[[ingest-metrics]]
= Ingest metrics

[NOTE]
=====
If you haven't already, you need to install {es} for storing and searching your data, and {kib} for visualizing and
managing it. For more information, see <<add-observability-data,Send data to {es}>>.
=====

Install and configure {metricbeat} on your servers to collect and preprocess system 
and service metrics, such as information about running processes, as well as CPU, memory,
disk, and network utilization numbers.

{metricbeat} comes with predefined assets for parsing, indexing, and
visualizing your data. To load these assets, {metricbeat} uses
{metricbeat-ref}/metricbeat-modules.html[modules], before sending them to {es}. Each
integration defines the basic logic for collecting data from specific services, such as
Redis or MySQL. A module consists of metricsets that fetch and structure the data. To learn more, see
{metricbeat-ref}/how-metricbeat-works.html[How {metricbeat} works].

[[install-metricbeat]]
== Step 1: Install {metricbeat}

Install {metricbeat} as close as possible to the service you want to monitor. 

To download and install {metricbeat}, use the commands that work with your system:

include::{beats-repo-dir}/tab-widgets/install-widget.asciidoc[]

=== Other installation options

* {metricbeat-ref}/running-on-kubernetes.html[Kubernetes]
* {metricbeat-ref}/running-on-docker.html[Docker]
* {metricbeat-ref}/running-on-cloudfoundry.html[Cloud Foundry]
* {metricbeat-ref}/setup-repositories.html[APT or YUM]
* https://www.elastic.co/downloads/beats/{beatname_lc}[Download page] 

[[metrics-connect-to-stack]]
== Step 2: Connect to {es} and {kib}

Connections to {es} and {kib} are required to set up {beatname_uc}.

Set the connection information in `metricbeat.yml`. To locate this configuration file,
see {metricbeat-ref}/directory-layout.html[Directory layout].

include::{beats-repo-dir}/tab-widgets/set-connection-widget.asciidoc[]

To learn more about required roles and privileges, see {metricbeat-ref}/feature-roles.html[Grant users access to secured resources].

[[enable-metrics-modules]]
== Step 3: Enable and configure modules

. Identify the modules you need to enable. To see a list of available {metricbeat-ref}/metricbeat-modules.html[modules], run:
+
--
include::{beats-repo-dir}/tab-widgets/list-modules-widget.asciidoc[]
--

. From the installation directory, enable one or more modules. If you accept the default configuration without enabling additional
modules, {beatname_uc} collects system metrics only.
+
The following command enables the `apache` and `mysql` configs in the `modules.d` directory:
+
--
include::{beats-repo-dir}/tab-widgets/enable-modules-widget.asciidoc[]
--
+
See the {metricbeat-ref}/command-line-options.html#modules-command[modules command]
to learn more about this command. If you are using a Docker image,
see {metricbeat-ref}/running-on-docker.html[Run Metricbeat on Docker].

. In the module configs under `modules.d`, change the module settings to match your environment. 
See {metricbeat-ref}/configuration-metricbeat.html#module-config-options[Standard config options]
for more about available settings.

TIP: To test your configuration file, change to the directory where the {beatname_uc} binary is installed, and run 
{beatname_uc} in the foreground with the following options specified: `./metricbeat test config -e`. Make sure
your config files are in the path expected by {beatname_uc} (see 
{metricbeat-ref}/directory-layout.html[Directory layout]), or use 
the `-c` flag to specify the path to the config file.

For more information about configuring {beatname_uc}, also see:

* {metricbeat-ref}/configuring-howto-metricbeat.html[Configure {beatname_uc}]
* {beats-ref}/config-file-format.html[Config file format]
* {metricbeat-ref}/metricbeat-reference-yml.html[`metricbeat.reference.yml`]:
This reference configuration file shows all non-deprecated options. You’ll find it in the same location as `metricbeat.yml`.

[[set-metricbeat-assets]]
== Step 4: Set up assets

{beatname_uc} comes with predefined assets for parsing, indexing, and
visualizing your data. To load these assets:

. Make sure the user specified in `metricbeat.yml` is authorized to set up {metricbeat-ref}/privileges-to-setup-beats.html[{beatname_uc}].

. From the installation directory, run:
+
--
include::{beats-repo-dir}/tab-widgets/setup-widget.asciidoc[]
--
+
`-e` is optional and sends output to standard error instead of the configured log output.

This step loads the recommended {ref}/indices-templates.html[index template]
for writing to {es} and deploys the sample dashboards for visualizing the data in {kib}.

TIP: A connection to {es} (or {ess}) is required to set up the initial environment.
If you’re using a different output, such as Logstash, see
{metricbeat-ref}/metricbeat-template.html#load-template-manually[Load the index template manually]
and {metricbeat-ref}/load-kibana-dashboards.html[Load Kibana dashboards].

[[start-metricbeat]]
== Step 5: Start {beatname_uc}

Before starting {beatname_uc}, modify the user credentials in
`metricbeat.yml` and specify a user who is
{metricbeat-ref}/privileges-to-publish-events.html[authorized to publish events].

To start {beatname_uc}, run:

// tag::start-step[]
:requires-sudo:
include::{beats-repo-dir}/tab-widgets/start-widget.asciidoc[]
:requires-sudo!:
// end::start-step[]

[[view-metrics-kibana]]
== Step 6: Confirm metrics are ingested

Let's confirm your data is correctly ingested to your cluster.

. Launch {kib}:
+
--
include::{beats-repo-dir}/tab-widgets/open-kibana-widget.asciidoc[]
--

. In the side navigation, click *{kib} > Discover*
+
. Select `metricbeat-*` as your index pattern. 
+
Each document in the index that matches the `metricbeat-*` index pattern
is displayed. By default, *Discover* shows data for the last 15 minutes.

Now let's have a look at the <<analyze-metrics,Metrics app>>.

// Add Javascript and CSS for tabbed panels
include::{beats-repo-dir}/tab-widgets/code.asciidoc[]

:!beatname_uc:
:!beatname_lc:
:!beatname_pkg:
:!modulename:
:!has_modules_command:
