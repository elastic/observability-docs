[[synthetics-command-reference]]
= Synthetics command reference

++++
<titleabbrev>Command reference</titleabbrev>
++++

[WARNING]
====
This functionality is experimental and may be changed or removed completely in a future release.
Elastic will take a best effort approach to fix any issues, but experimental features are not subject
to the support SLA of official GA features.

Have a question? Want to leave feedback? Visit the
https://discuss.elastic.co/tags/c/observability/uptime/75/synthetics[Synthetics discussion forum].
====

[discrete]
[[elastic-synthetics-command]]
== `elastic-synthetics`

Heartbeat uses the `elastic-synthetics` command to run and report synthetic tests.
It can also be used locally to help develop your tests.

*SYNOPSIS*

[source,sh]
----
npx @elastic/synthetics [FLAGS]
----

*FLAGS*

You will not need to use most command line flags -- they have been implemented
purely to interact with Heartbeat.
However, there are some you may find useful.
They are documented below.

*`--debug`*::
Prints debug info.

*`--environment`*::
Sets the environment. For example, dev, staging, prod, etc..

*`-h, --help`*::
Shows help for the `npx @elastic/synthetics` command.

*`--journey-name <name>`*::
Filters by journey name.

*`--json`*::
Output as JSON.

*`--no-headless`*::
Runs with the browser in headful mode.

*`--pause-on-error`*::
Pause on an error until a key press is made in the console.
Useful when combined with `--no-headless` during development.

*`--stdin`*::
Instead of reading from a file, `cat` it and pipe it in through `stdin`.