[[metrics-threshold-alert]]
= Create a metrics threshold alert

Based on the metrics that are listed on the *Metrics Explorer* page within the {metrics-app},
you can create a threshold alert to notify you when a metric has reached or exceeded a value for a specific
time period.

Additionally, each alert can be defined using multiple
conditions that combine metrics and thresholds to create precise notifications.

. In the side navigation, expand *Observability*, click *Metrics*, and then click *Metrics Explorer*.
. On the *Metrics Explorer* page, click *Alerts*, and then select *Create alert*.

[TIP]
=====
When you select *Alerts > Create alert*, the alert will automatically be populated with the same parameters you've configured on the *Metrics Explorer* page. If you've chosen a *graph per* value, your alert will be pre-configured to separately monitor and notify about each individual graph displayed on the page.

You can also create an alert based on a single graph on the *Metrics Explorer* page. Click *Actions* and 
then select *Create alert*. The condition and filter sections of the threshold alert
are automatically populated.
=====

[[metrics-conditions]]
== Metric conditions

Conditions for each alert can be applied to specific metrics that you select. You can select the aggregation type,
the metric, and specify the threshold value to be alerted on. To help you determine which thresholds are meaningful
to you, the preview charts provide a visualization. 

When you select *Alert me if there's no data*, the alert is triggered if the metrics don't report any data over the
expected time period, or if the alert fails to query {es}.

The *Filters* control the scope of the alert, and the *Create alert per* creates an instance of the alert for every
unique value of the `field` added. For example, create an alert per host, or per every mount point of each host. You
can also add multiple fields.

[role="screenshot"]
image::images/metrics-alert.png[Inventory alert]

Before creating an alert, you can preview whether the alert would have been triggered in the last hour,
day, week, or month.

[role="screenshot"]
image::images/alert-preview-metric.png[Preview metric alert]

[[action-types-metrics]]
== Action types

You can extend your alerts by connecting them to actions that use the following supported built-in integrations.

[role="screenshot"]
image::images/action-type-metrics.png[Action types]

[float]
=== Action variables

This section details the variables that metrics threshold alerts will send to your actions.

[float]
==== Basic variables

[role="screenshot"]
image::images/basic-variables.png[The default metrics threshold alert message detailing basic variables]

The default message for a metrics threshold alert shows an example of how to use its most basic variables.

context.group:: This variable resolves to the **group** on which the alert's condition was detected. For Inventory alerts, this will be the name of a monitored host, pod, container, etc. For Metric Threshold alerts, this will be the value of the field specified in the **Create alert per** field, or `*` if the alert is configured to aggregate your entire infrastructure.
context.alertState:: This variable will resolve to `ALERT`, `NO DATA`, or `ERROR`, depending on why this action is firing. `ALERT` means the alert's condition has been detected, `NO DATA` means no data was returned for the time period that the alert queried, and `ERROR` indicates an error when trying to query the data.
context.reason:: This variable provides a plain English description of why the alert is in its current state. For each of the alert's conditions, it will include the **detected value** of the monitored **metric**, and a description of the **threshold** it crossed.
context.timestamp:: This variable resolves to the timestamp at which the alert evaluated.


[float]
==== Advanced variables

[role="screenshot"]
image::images/advanced-variables.png[The default metrics threshold alert message detailing advanced variables]

There may be cases when you'd like to customize your action message instead of using `context.reason` to provide all the information you need. Metrics threshold alerts will also provide some advanced context variables that have a tree structure.

[IMPORTANT]
==============================================
These variables have to be used with the structure of `{{context.[Variable Name].condition[Number]}}`. For example, `{{context.value.condition0}}`, `{{context.value.condition1}}`, and so on. Do this even if your alert has only one condition (accessible with `.condition0`). Using just `{{context.[Variable Name]}}` will evaluate to a blank line or `[object Object]` depending on the action type.
==============================================

context.value.condition[X]:: This variable resolves to the detected value of conditions 0, 1, 2, etc.
context.value.threshold[X]:: This variable resolves to the threshold values of conditions 0, 1, 2, etc.
context.value.metric[X]:: This variable resolves to the monitored metric of conditions 0, 1, 2, etc.