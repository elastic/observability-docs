[[apm-open-telemetry]]
= Use OpenTelemetry with APM

++++
<titleabbrev>OpenTelemetry</titleabbrev>
++++

[NOTE]
====
*For a complete overview of using OpenTelemetry with Elastic, explore* https://elastic.github.io/opentelemetry/[*Elastic Distributions of OpenTelemetry*].
====

https://opentelemetry.io/docs/concepts/what-is-opentelemetry/[OpenTelemetry] is a set of APIs, SDKs, tooling,
and integrations that enable the capture and management of telemetry data from your services and applications.

Elastic integrates with OpenTelemetry, allowing you to reuse your existing instrumentation to easily send observability data to the {stack}. You can integrate OpenTelemetry with the {stack} the following ways:

* <<apm-otel-elastic-distros,Elastic Distributions of OpenTelemetry language SDKs>>
* <<apm-otel-lambda,Lambda collector exporter>>

[float]
[[apm-otel-elastic-distros]]
== Elastic Distributions of OpenTelemetry language SDKs

Elastic offers several distributions of OpenTelemetry language SDKs.
A _distribution_ is a customized version of an upstream OpenTelemetry repository.
Each Elastic Distribution of OpenTelemetry is a customized version of an https://opentelemetry.io/docs/languages/[OpenTelemetry language SDK].

image::images/apm-otel-distro.png[]

With an Elastic Distribution of OpenTelemetry language SDK you have access to all the features of the OpenTelemetry SDK that it customizes, plus:

* You may get access to SDK improvements and bug fixes contributed by the Elastic team _before_
the changes are available upstream in the OpenTelemetry repositories.
* The distro preconfigures the collection of tracing and metrics signals, applying some opinionated defaults,
such as which sources are collected by default.

// Why you wouldn't choose this method
// Just that it's still in tech preview?

// Where to go next
Get started with an Elastic Distribution of OpenTelemetry language SDK:

* https://elastic.github.io/opentelemetry/edot-sdks/java/index.html[**Elastic Distribution of OpenTelemetry Java →**]
* https://elastic.github.io/opentelemetry/edot-sdks/dotnet/index.html[**Elastic Distribution of OpenTelemetry .NET →**]
* https://elastic.github.io/opentelemetry/edot-sdks/nodejs/index.html[**Elastic Distribution of OpenTelemetry Node.js →**]
* https://elastic.github.io/opentelemetry/edot-sdks/python/index.html[**Elastic Distribution of OpenTelemetry Python →**]
* https://elastic.github.io/opentelemetry/edot-sdks/php/index.html[**Elastic Distribution of OpenTelemetry PHP →**]

[NOTE]
====
For more details about OpenTelemetry distributions in general,
visit the https://opentelemetry.io/docs/concepts/distributions[OpenTelemetry documentation].
====

[float]
[[apm-otel-lambda]]
== AWS Lambda collector exporter

AWS Lambda functions can be instrumented with OpenTelemetry and monitored with Elastic {observability}.

// Do we want to say anything about why you would/wouldn't choose this
// method to send data to Elastic?

// Where to go next
To get started, follow the official AWS Distro for OpenTelemetry Lambda documentation, and configure the OpenTelemetry Collector to output traces and metrics to your Elastic cluster:

https://aws-otel.github.io/docs/getting-started/lambda[*Get started with the AWS Distro for OpenTelemetry Lambda*^] image:images/icons/popout.svg[]
