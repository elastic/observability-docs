[[apm-secure-comms-stack]]
== Secure communication with the {stack}

++++
<titleabbrev>With the {stack}</titleabbrev>
++++

NOTE: This documentation only applies to the APM Server binary.

Use role-based access control or API keys to grant APM Server users access to secured resources.

* <<apm-feature-roles>>
* <<apm-beats-api-keys>>.

After privileged users have been created, use authentication to connect to a secured Elastic cluster.

* <<apm-securing-communication-elasticsearch>>
* <<apm-configuring-ssl-logstash>>

For secure communication between APM Server and APM Agents, see <<apm-secure-agent-communication>>.

A reference of all available <<apm-configuration-ssl-landing,SSL configuration settings>> is also available.

[float]
[[apm-security-overview]]
=== Security Overview

APM Server exposes an HTTP endpoint, and as with anything that opens ports on your servers,
you should be careful about who can connect to it.
Firewall rules are recommended to ensure only authorized systems can connect.

[float]
[[apm-feature-roles]]
=== Feature roles

You can use role-based access control to grant users access to secured
resources. The roles that you set up depend on your organization's security
requirements and the minimum privileges required to use specific features.

Typically, you need to create the following separate roles:

* <<apm-privileges-to-publish-events,Writer role>>: To publish events collected by APM Server.
* <<apm-privileges-to-publish-monitoring,Monitoring role>>: One for sending monitoring
information, and another for viewing it.
* <<apm-privileges-api-key,API key role>>: To create and manage API keys.
* <<apm-privileges-agent-central-config,Central configuration management role>>: To view
APM Agent central configurations.
* <<apm-privileges-rum-source-mapping,RUM source mapping role>>: To read RUM source maps.

{es-security-features} provides {ref}/built-in-roles.html[built-in roles] that grant a
subset of the privileges needed by APM users.
When possible, assign users the built-in roles to minimize the affect of future changes on your security strategy.
If no built-in role is available, you can assign users the privileges needed to accomplish a specific task.
In general, there are three types of privileges you'll work with:

* **{es} cluster privileges**: Manage the actions a user can perform against your cluster.
* **{es} index privileges**: Control access to the data in specific indices your cluster.
* **{kib} space privileges**: Grant users write or read access to features and apps within {kib}.

////
***********************************  ***********************************
***********************************  ***********************************
////

[[apm-privileges-to-publish-events]]
=== Grant privileges and roles needed for writing events

++++
<titleabbrev>Create a _writer_ user</titleabbrev>
++++

APM users that publish events to {es} need privileges to write to APM data streams.

[float]
==== General writer role

To grant an APM user the required privileges for writing events to {es}:

. Create a *general writer role*, called something like `apm_writer`,
that has the following privileges:
+
[options="header"]
|====
|Type | Privilege | Purpose

|Index
|`auto_configure` on `traces-apm*`, `logs-apm*`, and `metrics-apm*` indices
|Permits auto-creation of indices and data streams

|Index
|`create_doc` on `traces-apm*`, `logs-apm*`, and `metrics-apm*` indices
|Write events into {es}
|====

. Assign the *general writer role* to users who need to publish APM data.

. If <<apm-configuration-rum,real user monitoring>> is enabled, create a separate <<apm-privileges-rum-source-mapping,RUM source mapping role>>.

////
***********************************  ***********************************
***********************************  ***********************************
////

[[apm-privileges-to-publish-monitoring]]
=== Grant privileges and roles needed for monitoring

++++
<titleabbrev>Create a _monitoring_ user</titleabbrev>
++++

{es-security-features} provides built-in users and roles for publishing and viewing monitoring data.
The privileges and roles needed to publish monitoring data
depend on the method used to collect that data.

* <<apm-privileges-to-publish-monitoring-write>>
** <<apm-privileges-to-publish-monitoring-internal>>
** <<apm-privileges-to-publish-monitoring-metricbeat>>
* <<apm-privileges-to-publish-monitoring-view>>

[float]
[[apm-privileges-to-publish-monitoring-write]]
==== Publish monitoring data

[IMPORTANT]
====
**{ecloud} users:** This section does not apply to our
https://www.elastic.co/cloud/elasticsearch-service[hosted {ess}].
Monitoring on {ecloud} is enabled by clicking the *Enable* button in the *Monitoring* panel.
====

[float]
[[apm-privileges-to-publish-monitoring-internal]]
===== Internal collection

If you're using <<apm-monitoring-internal-collection,internal collection>> to
collect metrics about APM Server, {security-features} provides
the +apm_system+ {ref}/built-in-users.html[built-in user] and
+apm_system+ {ref}/built-in-roles.html[built-in role] to send
monitoring information. You can use the built-in user, if it's available in your
environment, or create a user who has the built-in role assigned,
or create a user and manually assign the privileges needed to send monitoring
information.

If you use the built-in +apm_system+ user,
make sure you set the password before using it.

If you don't use the +apm_system+ user:

--
. Create a *monitoring role*, called something like
+apm_monitoring_writer+, that has the following privileges:
+
[options="header"]
|====
|Type | Privilege | Purpose

|Index
|`create_index` on `.monitoring-beats-*` indices
|Create monitoring indices in {es}

|Index
|`create_doc` on `.monitoring-beats-*` indices
|Write monitoring events into {es}
|====
+
. Assign the *monitoring role* to users who need to write monitoring data to {es}.
--

[float]
[[apm-privileges-to-publish-monitoring-metricbeat]]
===== {metricbeat} collection

NOTE: When using {metricbeat} to collect metrics,
no roles or users need to be created with APM Server.
See <<apm-monitoring-metricbeat-collection>>
for complete details on setting up {metricbeat} collection.

If you're <<apm-monitoring-metricbeat-collection,using {metricbeat}>> to collect
metrics about APM Server, {security-features} provides the `remote_monitoring_user`
{ref}/built-in-users.html[built-in user], and the `remote_monitoring_collector`
and `remote_monitoring_agent` {ref}/built-in-roles.html[built-in roles] for
collecting and sending monitoring information. You can use the built-in user, if
it's available in your environment, or create a user who has the privileges
needed to collect and send monitoring information.

If you use the built-in `remote_monitoring_user` user,
make sure you set the password before using it.

If you don't use the `remote_monitoring_user` user:

--
. Create a *monitoring user* on the production cluster who will collect and send monitoring
information. Assign the following roles to the *monitoring user*:
+
[options="header"]
|====
|Role | Purpose

|`remote_monitoring_collector`
|Collect monitoring metrics from APM Server

|`remote_monitoring_agent`
|Send monitoring data to the monitoring cluster
|====
--

[float]
[[apm-privileges-to-publish-monitoring-view]]
==== View monitoring data

To grant users the required privileges for viewing monitoring data:

. Create a *monitoring role*, called something like
+apm_monitoring_viewer+, that has the following privileges:
+
[options="header"]
|====
|Type | Privilege | Purpose

| Spaces
|`Read` on Stack monitoring
|Read-only access to the {stack-monitor-app} feature in {kib}.

| Spaces
|`Read` on Dashboards
|Read-only access to the Dashboards feature in {kib}.
|====
+
. Assign the *monitoring role*, along with the following built-in roles, to users who
need to view monitoring data for APM Server:
+
[options="header"]
|====
|Role | Purpose

|`monitoring_user`
|Grants access to monitoring indices for APM Server
|====

////
***********************************  ***********************************
***********************************  ***********************************
////

[[apm-privileges-api-key]]
=== Grant privileges and roles needed for API key management

++++
<titleabbrev>Create an _API key_ user</titleabbrev>
++++

You can configure <<apm-api-key,API keys>> to authorize requests to APM Server.
To create an APM Server user with the required privileges for creating and managing API keys:

. Create an **API key role**, called something like `apm_api_key`,
that has the following `cluster` level privileges:
+
[options="header"]
|====
| Privilege | Purpose

|`manage_own_api_key`
|Allow APM Server to create, retrieve, and invalidate API keys
|====

. Depending on what the **API key role** will be used for,
also assign the appropriate `apm` application-level privileges:
+
* To **receive Agent configuration**, assign `config_agent:read`.
* To **ingest agent data**, assign `event:write`.
* To **upload source maps**, assign `sourcemap:write`.

. Assign the **API key role** to users that need to create and manage API keys.
Users with this role can only create API keys that have the same or lower access rights.

[float]
[[apm-privileges-api-key-example]]
=== Example API key role

The following example assigns the required cluster privileges,
and the ingest agent data `apm` API key application privileges to a role named `apm_api_key`:

[source,kibana]
----
PUT _security/role/apm_api_key <1>
{
  "cluster": [
    "manage_own_api_key" <2>
  ],
  "applications": [
    {
      "application": "apm",
      "privileges": [
        "event:write" <3>
      ],
      "resources": [
        "*"
      ]
    }
  ]
}
----
<1> `apm_api_key` is the name of the role we're assigning these privileges to. Any name can be used.
<2> Required cluster privileges.
<3> Required for API keys that will be used to ingest agent events.


////
***********************************  ***********************************
***********************************  ***********************************
////

[[apm-privileges-agent-central-config]]
=== Grant privileges and roles needed for APM Agent central configuration

++++
<titleabbrev>Create a _central config_ user</titleabbrev>
++++

[[apm-privileges-agent-central-config-server]]
==== APM Server agent central configuration management

APM Server acts as a proxy between your APM agents and the APM UI.
The APM UI communicates any changed settings to APM Server so that your agents only need to poll the Server
to determine which central configuration settings have changed.

To grant an APM Server user with the required privileges for managing central configuration in {es} without {kib},
assign the user the following privileges:

[options="header"]
|====
|Type | Privilege | Purpose

| Index
|`read` on `.apm-agent-configuration` index, `allow_restricted_indices: true`
|Allow APM Server to manage central configurations in {es}
|====

The above privileges should be sufficient for APM agent central configuration to work properly
as long as APM Server communicates with {es} successfully.
If it fails, it may fallback to read agent central configuration via {kib} if configured,
which requires the following privileges:

[options="header"]
|====
|Type | Privilege | Purpose

| Spaces
|`Read` on APM UI
|Allow APM Server to manage central configurations via the APM UI
|====

TIP: Looking for privileges and roles needed to use central configuration from the APM UI or APM UI API?
See <<apm-app-central-config-user,APM UI central configuration user>>.

[[apm-privileges-rum-source-map]]
=== Grant privileges and roles needed for reading source maps

++++
<titleabbrev>Create a _source map_ user</titleabbrev>
++++

[[apm-privileges-rum-source-mapping]]
==== APM Server RUM source mapping

If <<apm-configuration-rum,real user monitoring>> is enabled, additional privileges are required to read source maps.

To grant an APM Server user with the required privileges for reading RUM source maps from {es} directly without {kib},
assign the user the following privileges:

[options="header"]
|====
|Type | Privilege | Purpose

|Index
|`read` on `.apm-source-map` index
|Allow APM Server to read RUM source maps from {es}
|====

The above privileges should be sufficient for RUM source mapping to work properly
as long as APM Server communicates with {es} successfully.
If it fails, it may fallback to read source maps via {kib} if configured,
which requires additional {kib} privileges.
See <<apm-rum-sourcemap-api,RUM source map API>> for more details.

////
***********************************  ***********************************
***********************************  ***********************************
////

// [[apm-privileges-create-api-keys]]
// === Grant privileges and roles needed to create APM Server API keys

// ++++
// <titleabbrev>Create an _APM API key_ user</titleabbrev>
// ++++

// CONTENT