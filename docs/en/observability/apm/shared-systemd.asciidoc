[[running-with-systemd]]
=== APM Server and systemd

IMPORTANT: These commands only apply to the APM Server binary installation method.
Fleet-managed users should see {fleet-guide}/start-stop-elastic-agent.html[Start and stop {agent}s on edge hosts].

The DEB and RPM packages include a service unit for Linux systems with
systemd. On these systems, you can manage APM Server by using the usual
systemd commands.

We recommend that the apm-server process is run as a non-root user.
Therefore, that is the default setup for APM Server's DEB package and RPM installation.

[float]
==== Start and stop APM Server

Use `systemctl` to start or stop APM Server:

["source", "sh", subs="attributes"]
------------------------------------------------
sudo systemctl start apm-server
------------------------------------------------

["source", "sh", subs="attributes"]
------------------------------------------------
sudo systemctl stop apm-server
------------------------------------------------

By default, the APM Server service starts automatically when the system
boots. To enable or disable auto start use:

["source", "sh", subs="attributes"]
------------------------------------------------
sudo systemctl enable apm-server
------------------------------------------------

["source", "sh", subs="attributes"]
------------------------------------------------
sudo systemctl disable apm-server
------------------------------------------------

[float]
==== APM Server status and logs

To get the service status, use `systemctl`:

["source", "sh", subs="attributes"]
------------------------------------------------
systemctl status apm-server
------------------------------------------------

Logs are stored by default in journald. To view the Logs, use `journalctl`:

["source", "sh", subs="attributes"]
------------------------------------------------
journalctl -u apm-server.service
------------------------------------------------

[float]
=== Customize systemd unit for APM Server

The systemd service unit file includes environment variables that you can
override to change the default options.

// lint ignore usr
[cols="<h,<,<m",options="header",]
|=======================================
| Variable | Description | Default value
| `BEAT_LOG_OPTS` | Log options |
| `BEAT_CONFIG_OPTS` | Flags for configuration file path | +-c /etc/apm-server/apm-server.yml+
| `BEAT_PATH_OPTS` | Other paths | +-path.home /usr/share/apm-server -path.config /etc/apm-server -path.data /var/lib/apm-server -path.logs /var/log/apm-server+
|=======================================

NOTE: You can use `BEAT_LOG_OPTS` to set debug selectors for logging. However,
to configure logging behavior, set the logging options described in
<<configuration-logging,Configure logging>>.

To override these variables, create a drop-in unit file in the
+/etc/systemd/system/apm-server.service.d+ directory.

For example a file with the following content placed in
+/etc/systemd/system/apm-server.service.d/debug.conf+
would override `BEAT_LOG_OPTS` to enable debug for {es} output.

["source", "systemd", subs="attributes"]
------------------------------------------------
[Service]
Environment="BEAT_LOG_OPTS=-d elasticsearch"
------------------------------------------------

To apply your changes, reload the systemd configuration and restart
the service:

["source", "sh", subs="attributes"]
------------------------------------------------
systemctl daemon-reload
systemctl restart apm-server
------------------------------------------------

NOTE: It is recommended that you use a configuration management tool to
include drop-in unit files. If you need to add a drop-in manually, use
+systemctl edit apm-server.service+.

include::{observability-docs-root}/docs/en/observability/apm/config-ownership.asciidoc[]