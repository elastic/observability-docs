[[apm-latency-threshold-rule]]
= Latency threshold rule

Alert when the latency or failed transaction rate is abnormal.
Threshold rules can be as broad or as granular as you'd like, enabling you to define exactly when you want to be alerted--whether that's at the environment level, service name level, transaction type level, and/or transaction name level.

[discrete]
== Filter and conditions

Filter the transactions coming from your application to apply an Latency threshold rule to specific
services (`SERVICE`), environments (`ENVIRONMENT`), transaction types (`TYPE`), or transaction names (`NAME`).
Alternatively, you can use a {kibana-ref}/kuery-query.html[KQL filter] to limit the scope of the alert
by toggling on the *Use KQL Filter* option.

Then, you can specify which conditions should result in an alert. This includes specifying:

* Which latency measurement to evaluate against (`WHEN`): average, 95th percentile, or 99th percentile.
* The minimum value of the chosen latency measurement (`IS ABOVE`) in milliseconds.
* The timeframe in which the failures must occur (`FOR THE LAST`) in seconds, minutes, hours, or days.

.Example
****
This example creates a rule for all `request` transactions coming from production that would result in
an alert when the average latency is above 1 second (1000ms) for the last 30 minutes:

image::apm-latency-threshold-rule-filters-conditions.png[width=600]

Alternatively, you can use a KQL filter to limit the scope of the alert:

. Toggle on *Use KQL Filter*.
. Add a filter:
+
[source,txt]
------
service.environment:"Production" and transaction.type:"request"
------
****

[discrete]
== Groups

include::../shared/alerting-and-rules/generic-apm-group-by.asciidoc[]

[discrete]
== Rule schedule

include::../shared/alerting-and-rules/generic-apm-rule-schedule.asciidoc[]

[discrete]
== Advanced options

include::../shared/alerting-and-rules/generic-apm-advanced-options.asciidoc[]

[discrete]
== Actions

Extend your rules by connecting them to actions that use built-in integrations.

[discrete]
=== Action types

Extend your rules by connecting them to actions that use the following supported built-in integrations.

include::../shared/alerting-and-rules/alerting-connectors.asciidoc[]

[discrete]
=== Action frequency

include::../shared/alerting-and-rules/generic-apm-action-frequency.asciidoc[]

[discrete]
=== Action variables

A default message is provided as a starting point for your alert.
If you want to customize the message, add more context to the message by clicking the icon above
the message text box and selecting from a list of available variables.

TIP: To add variables to alert messages, use https://mustache.github.io/[Mustache] template syntax, for example `{{variable.name}}`.

image::apm-latency-threshold-rule-action-variables.png[width=600]

The following variables are specific to this rule type.
You an also specify {kibana-ref}/rule-action-variables.html[variables common to all rules].

`context.alertDetailsUrl`::
Link to the alert troubleshooting view for further context and details. This will be an empty string if the server.publicBaseUrl is not configured.

`context.environment`::
The transaction type the alert is created for.

`context.interval`::
The length and unit of the time period where the alert conditions were met.

`context.reason`::
A concise description of the reason for the alert.

`context.serviceName`::
The service the alert is created for.

`context.threshold`::
Any trigger value above this value will cause the alert to fire.

`context.transactionName`::
The transaction name the alert is created for.

`context.transactionType`::
The transaction type the alert is created for.

`context.triggerValue`::
The value that breached the threshold and triggered the alert.

`context.viewInAppUrl`::
Link to the alert source.
