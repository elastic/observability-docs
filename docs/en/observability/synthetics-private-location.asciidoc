[[synthetics-private-location]]
= Add a private location

IMPORTANT: This is only relevant to monitors created using the {uptime-app} or project monitors.

beta[]

Private locations allow you to run monitors from your own premises.
Before running a monitor on a private location, you'll need to:

* <<synthetics-private-location-fleet-agent>>.
* <<synthetics-private-location-connect,Connect {fleet} to the {stack}>> and enroll an {agent} in {fleet}.
// The agent will be used to run the monitors in your private locations.
* <<synthetics-private-location-add>> in the {uptime-app} UI.

[discrete]
[[synthetics-private-location-fleet-agent]]
== Set up {fleet-server} and {agent}

Start by setting up {fleet-server} and {agent}:

* *Set up {fleet-server}*: If you are using {ecloud}, {fleet-server} will already be provided and you can skip this step.
To learn more, refer to <<set-up-fleet,{fleet}>>.
* **Create an agent policy**: For more information on agent policies and creating them,
refer to {fleet-guide}/agent-policy.html#create-a-policy[{agent} policy].

[IMPORTANT]
====
A private location should be set up against an agent policy that runs on a single {agent}.
Do _not_ run the same agent policy on multiple agents being used for private locations, as you may
end up with duplicate or missing tests. Private locations do not currently load balance tests across
multiple {agents}.

Any private location can only run two tests simultaneously.
As a result, if more than two tests are assigned to a particular private location, there may be a small delay to run them.
====

[discrete]
[[synthetics-private-location-connect]]
== Connect to the {stack}

After setting up {fleet}, you'll connect {fleet} to the {stack}
and enroll an {agent} in {fleet}.

[[synthetics-private-location-docker]]
Elastic provides Docker images that you can use to run {fleet} and an {agent} more easily.
For monitors running on private locations, you _must_ use the `elastic-agent-complete`
Docker image to create a self-hosted {agent} node. The standard {ecloud} or self-hosted
{agent} will not work.

ifeval::["{release-state}"=="unreleased"]

Version {version} has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

To pull the Docker image run:

[source,sh,subs="attributes"]
----
docker pull docker.elastic.co/beats/elastic-agent-complete:{version}
----

endif::[]

Then enroll and run an {agent}.
You'll need an enrollment token and the URL of the {fleet-server}. 
You can use the default enrollment token for your policy or create new policies
and {fleet-guide}/fleet-enrollment-tokens.html[enrollment tokens] as needed.

For more information on running {agent} with Docker, refer to
{fleet-guide}/elastic-agent-container.html[Run {agent} in a container].

ifeval::["{release-state}"=="unreleased"]

Version {version} has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

[source,sh,subs="attributes"]
----
docker run \
  --env FLEET_ENROLL=1 \
  --env FLEET_URL={fleet-server-host-url} \
  --env FLEET_ENROLLMENT_TOKEN={enrollment-token} \
  --cap-add=NET_RAW
  --cap-add=SETUID
  --rm docker.elastic.co/beats/elastic-agent-complete:{version}
----

endif::[]

[IMPORTANT]
====
The `elastic-agent-complete` Docker image requires additional capabilities to operate correctly. Ensure
`NET_RAW` and `SETUID` are enabled on the container.
====

[NOTE]
====
You may need to set other environment variables.
Learn how in {fleet-guide}/agent-environment-variables.html[{agent} environment variables guide].
====

[discrete]
[[synthetics-private-location-add]]
== Add a private location

When the {agent} is running you can add a new private location in {kib}:

. Go to **{observability}** -> **Uptime**.
. Click **Monitor Management**.
. Click **Private locations**.
. Click **Add location**.
. Give your new location a unique _Location name_ and select the _Agent policy_ you created above.
. Click **Save**. 

[discrete]
[[synthetics-private-location-next]]
== Next steps

Now you can add monitors to your private location in the {uptime-app} or using the Elastic Synthetics library's `push` method:

* For lightweight monitors, refer to <<uptime-set-up-choose-agent>> or <<uptime-set-up-choose-project-monitors>>.
* For browser monitors, refer to <<synthetic-run-tests>>.

TIP: You can run the same monitor both from Elastic's global managed infrastructure _and_ your private locations to compare results.