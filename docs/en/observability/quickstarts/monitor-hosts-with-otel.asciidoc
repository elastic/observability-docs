[[quickstart-monitor-hosts-with-otel]]
= Quickstart: Monitor hosts with OpenTelemetry

preview::[]

In this quickstart guide, you'll learn how to monitor your hosts using the Elastic Distribution of OpenTelemetry (EDOT) Collector.
You'll also learn how to use {observability} features to gain deeper insight into your observability data after collecting it.

[discrete]
== Prerequisites

* An {es} cluster for storing and searching your data, and {kib} for visualizing and managing your data. This quickstart is available for all Elastic deployment models. The quickest way to get started with this quickstart is using a trial project on {serverless-docs}/quickstart-monitor-hosts-with-otel.html[Elastic serverless].
* This quickstart is only available for Linux and MacOS systems.
* A user with the **Admin** role or higher—required to onboard system logs and metrics. To learn more, refer to {cloud}/ec-user-privileges.html[User roles and privileges].
* Root privileges on the host—required to run the OpenTelemetry collector because of these components:
** `hostmetrics` receiver to read all system metrics (all processes, memory, etc.).
** `filelog` to allow the collector to read any user or application log files.


[discrete]
== Limitations
Refer to https://github.com/elastic/opentelemetry/blob/main/docs/collector-limitations.md[Elastic OpenTelemetry Collector limitations] for known limitations when using the EDOT Collector.

[discrete]
== Collect your data

Follow these steps to collect logs and metrics using the EDOT Collector:

. In {kib}, go to the **Observability** UI and click **Add Data**.
. Under **What do you want to monitor?** select **Host**, and then select **OpenTelemetry: Logs & Metrics**.
+
[role="screenshot"]
image::images/quickstart-monitor-hosts-otel-entry-point.png[Host monitoring entry point]
. Select the appropriate platform.
. Copy the command under step 1, open a terminal on your host, and run the command.
+
This command downloads the {agent} package, extracts it in a EDOT directory. For example, `elastic-distro-8.16.0-linux-x86_64`.
It also adds a sample `otel.yml` configuration file to the directory and updates the storage directory, Elastic endpoint, and API key in the file.
+
The default log path is `/var/log/*.log`. To update the path, modify the `otel.yml` in the EDOT directory.
+
Find additional sample `otel.yml` configuration files in the EDOT directory in the `otel_samples` folder.
. Copy the command under Step 2 and run it in your terminal to start the EDOT Collector.

NOTE: Logs are collected from setup onward, so you won't see logs that occurred before starting the EDOT Collector.

Under **Visualize your data**, you'll see links to **Logs Explorer** to view your logs and **Hosts** to view your host metrics.

[discrete]
== Gain deeper insight into your host data

After using the Hosts page and Discover to confirm you've ingested all the host logs and metrics you want to monitor,
use Elastic {observability} to gain deeper insight into your host data with the following capabilities and features:

* In the <<monitor-infrastructure-and-hosts,Infrastructure UI>>, analyze and compare data collected from your hosts.
You can also:
** <<inspect-metric-anomalies,Detect anomalies>> for memory usage and network traffic on hosts.
** <<create-alerts,Create alerts>> that notify you when an anomaly is detected or a metric exceeds a given value.
* In the <<explore-logs,Logs Explorer>>, search and filter your log data,
get information about the structure of log fields, and display your findings in a visualization.
You can also:
** <<monitor-datasets,Monitor log data set quality>> to find degraded documents.
** {kibana-ref}/xpack-ml-aiops.html#log-pattern-analysis[Run a pattern analysis] to find patterns in unstructured log messages.
** <<create-alerts,Create alerts>> that notify you when an Observability data type reaches or exceeds a given value.
* Use {kibana-ref}/xpack-ml.html[machine learning] to apply predictive analytics to your data:
** {kibana-ref}/xpack-ml-anomalies.html[Detect anomalies] by comparing real-time and historical data from different sources to look for unusual, problematic patterns.
** {kibana-ref}/xpack-ml-aiops.html#log-rate-analysis[Analyze log spikes and drops].
** {kibana-ref}/xpack-ml-aiops.html#change-point-detection[Detect change points] in your time series data.

Refer to the <<observability-introduction>> for a description of other useful features.
