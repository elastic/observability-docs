[[whats-new]]
= What's new in {minor-version}

Here are the highlights of what's new and improved in {minor-version}.

Other versions:
{observability-guide-all}/7.10/whats-new.html[7.10] |
https://www.elastic.co/blog/whats-new-elastic-observability-7-9-0-unified-agent-kpi-overview-dashboard[7.9] |
https://www.elastic.co/blog/elastic-observability-7-8-0-released[7.8] |
https://www.elastic.co/blog/elastic-observability-7-7-0-released[7.7] |
https://www.elastic.co/blog/elastic-observability-7-6-0-released[7.6] |
https://www.elastic.co/blog/elastic-observability-7-5-0-released[7.5] |
https://www.elastic.co/blog/elastic-observability-update-7-4-0[7.4]

[discrete]
== Give {minor-version} a try

Try {minor-version} now by deploying {es} and {kib} on
{ess-product}[Elastic Cloud] or
by https://www.elastic.co/start[downloading them].

// tag::whats-new[]

[discrete]
== APM service overview page

Understanding your services' performance and detecting a root cause just got easier
with our new service overview page in the {apm-app}.

In {minor-version}, the new service overview page is now your default starting point
for investigating any services monitored by Elastic APM agents or with OpenTelemetry and Jaeger.

[role="screenshot"]
image::images/apm-service-overview.png[Service overview page]

The improved APM service overview page provides you with: 

* High-level details including service, runtime and framework versions, container
and Kubernetes information, along with cloud metadata, if applicable.
* Latency timeline overlapped with deployment events, alert violations, and anomalies
that occurred during the same period.
* Top contributors grouped by separate dimensions:
** Transactions - quickly identify which transactions are impacted and drill down for details.
** Errors - correlate the rate of errors and exceptions and their start time to the service experience.
** Backends - understand which services and backends you depend on and how they impact your service performance.
** Instances - identify whether the problem is occurring on specific instances or across your entire cluster.

For more details, see {kibana-ref}/service-overview.html[Service overview].

[discrete]
== APM and logs

Inspecting application log data and contextual traces can be extremely helpful to
troubleshoot a performance problem quickly. Since 7.5, the {apm-app} has offered an
easy navigation option that allows you to navigate from your distributed traces into the logs.

For {minor-version}, we have two exciting announcements:

* Elastic Common Schema (ECS) logging libraries are now generally available! You can now use
ECS logger plugins to format your logs into ECS-compatible JSON. Using these libraries, along
with an Elastic APM agent, means that you do not have any manual configuration to correlate
logs to your application traces.
* Embedded trace logs are now available in the curated {apm-app}, which means you no longer have
to navigate outside the trace view to visualize your application logs. These contextualized
and correlated logs quickly point you to the underlying issues within your application.

[role="screenshot"]
image::images/apm-logs.png[Logs within APM]

[discrete]
== Enhanced host details view

Monitoring large infrastructures can be a complicated and time-consuming task. To get to the
root cause of a problem, you may need to analyze multiple data streams from various
infrastructure parts and keep track of related information. To help you minimize the time
it takes to troubleshoot a problem, you want quick access to all the relevant details on
the host, including the main KPIs, processes running on the host, logs originating from it,
and other detailed host information.

In {minor-version}, we’re delighted to introduce an enhanced view of hosts or VMs to the
Metrics app. Without leaving the Inventory page, you can view the following information about the host or VM:

* Time charts of key host metrics: CPU, memory, load, and network
* Logs generated by the host or the services running on the host
* Top processes running on the host by CPU or memory
* Host metadata: host, cloud, and agent information

The enhanced host details help accelerate root cause analysis by tightly aligning how the
information is presented and accessed to a typical investigative workflow. This makes it
easier for infrastructure ops teams to monitor and troubleshoot infrastructure issues.

For more details, see {observability-guide}/host-metrics.html#enhanced-host-details[Host details].

[role="screenshot"]
image::images/enhanced-host-metrics.png[Enhanced host metrics]

[discrete]
== Synthetics waterfall view

When a webpage loads, what the end user sees on the screen is the combination of hundreds
of HTML files, images, web fonts, Javascript, and other media objects. Browsers need to
connect to servers, download, parse, and then render each of these for the user to do what
they came to the website to do. There are many moving parts, and this is why a synthetic
monitoring product must have the ability to see the object by object load of the website.

In {minor-version}, we’re excited to release the first iteration of our page load waterfall that
displays each object's connection stats. This iteration is a significant increase in
functionality for our users, along with some unique capabilities in the market. There
is a lot more coming in subsequent releases!

For more details, see {observability-guide}/synthetics-visualize.html[Visualize synthetic monitoring].

[role="screenshot"]
image::images/synthetics-waterfall-chart.png[Synthetics waterfall view]

[discrete]
== Runtime fields in logs

For {minor-version}, we are delighted to announce that {es} now supports creating
runtime fields in the {stack}. Once a runtime field is created, for example, the
`day_of_week` field, you can view and filter them in the {logs-app}'s stream page,
just like standard fields.

For more information, see our latest https://elastic.co/blog/introducing-elasticsearch-runtime-fields[blog].

[role="screenshot"]
image::images/runtime-fields.png[Runtime fields in logs]

[discrete]
== {fleet} and {agent} (Beta 3)

In {minor-version}, we’re excited to release our third beta of {fleet} and {agent}.
So you can identify and troubleshoot issues faster, we have added better observability
to {agent} integrations, logs, and metrics. This helps you gain visibility into
issues with {agent} right inside the {fleet} app.

The agent details page now shows information about the agent settings, the host, and
which integrations are running.

[role="screenshot"]
image::images/elastic-agent.png[Elastic agent page]

Additionally, the status information from the {agent} is now available in {es}.
We added a simple log viewer that lets you easily search and filter. It is only compatible
with {agent}s version {minor-version} or higher. For a richer experience, you can also open
the {logs-app} to view the logs.

[role="screenshot"]
image::images/elastic-agent-logs.png[Elastic agent logs]

For more in-depth insight when troubleshooting, we’ve made it easier to debug logging.
At the bottom of the page, you can change the log level for the agent. You can
apply it selectively on a per-agent basis to avoid sending a high volume of data from all your agents.

We’ve also improved agent binary upgrades. To ensure that the agent remains functioning
and reachable from the {fleet} app, we will automatically roll the agent back to the
previous version during an upgrade, if it has an error.

Finally, {agent} can self-protect when the {endpoint-sec} integration is enabled.
Self-protection means that {endpoint-sec} guards against users and attackers interfering
with {agent}’s functionality. Over time, we will enhance these guards to prevent
interference with {agent}.

[discrete]
== APM Prometheus metrics client

In {minor-version}, the APM Python agent learned a new trick! The latest version can
automatically detect and monitor Prometheus metrics by auto-instrumentation of the
Prometheus Python library.

Your application custom metrics are now monitored with zero
effort whenever you monitor your Python applications with APM. Once you hook up custom
metrics, you can quickly build a {kib} dashboard using TSVB or Lens to analyze them
and correlate with other performance metrics.

[discrete]
== {log-driver-long} (GA)

For {minor-version}, the https://hub.docker.com/plugins/elastic-logging-plugin[Docker logging plugin]
for enabling a simpler user experience for application logging is now generally available.

You can use the {log-driver-long} to forward logs to {es}, {ls}, Kafka, or Redis,
for all Docker containers or on a per-container basis. Unlike other Beats, the {log-driver-long} requires no
elevated permissions to read container logs, and the installation is performed entirely
within the Docker CLI.

[discrete]
== {filebeat} and {metricbeat} modules (GA)

For {minor-version} we’re excited to announce the general availability of the following modules:

* {metricbeat-ref}/metricbeat-module-iis.html[{metricbeat} IIS]
* {metricbeat-ref}/metricbeat-module-mssql.html[{metricbeat} MSSQL]
* {filebeat-ref}/filebeat-module-okta.html[{filebeat} Okta]
* {filebeat-ref}/filebeat-module-microsoft.html#_m365_defender_fileset_settings[{filebeat} Microsoft 365 Defender]
* {filebeat-ref}/filebeat-module-microsoft.html#_defender_atp_fileset_settings[{filebeat} Defender API]
* {filebeat-ref}/filebeat-module-google_workspace.html[{filebeat} Google Cloud Workspace]

These integrations are now stable, production-ready, and fully supported!

[discrete]
== Natively collect AWS Fargate metrics

If you’re running Amazon’s ECS or EKS, the chances are you’re using AWS Fargate to manage these
deployments, because Fargate removes the responsibility of provisioning and managing the
underlying EC2 infrastructure. You only need to specify your containers and tasks.

In {minor-version}, we’ve added a metric collection from AWS Fargate service to our cloud integrations list.
The new {metricbeat-ref}/metricbeat-module-awsfargate.html[AWS `fargate`] {metricbeat} module collects
container metrics and metadata from the Fargate task metadata endpoints and allows you to
monitor containers inside the same AWS Fargate task.

The `fargate` module comes with a prebuilt dashboard where you can see all your containers and
their key metrics in a given cluster or region, giving you an overview of all your Fargate tasks.

[role="screenshot"]
image::images/aws-fargate-metrics.png[AWS Fargate metrics]

[discrete]
== Sync time across {observability} apps

Previously, when switching between the {observability} apps using the side navigation in {kib},
the time range selection did not always persist.

In {minor-version}, we have improved the workflow to ensure that the time range is preserved within
the application as you navigate. This dramatically improves the speed and efficiency of
investigation workflows across logs, metrics, traces, and other types of data.

[discrete]
== {kib} alerting framework (GA)

For {minor-version}, we are delighted to announce the {kib} alerting framework's general availability.
It has been in beta for the past few minor releases, during which we have improved scalability and architecture.

With {kib} alerting integrated with Elastic {observability}, you can create alerts and route
notifications to external systems for further triaging.

[discrete]
== Searchable snapshots in {ecloud} (GA)

Retain and search more data with searchable snapshots on low-cost object stores and the new cold data tier.
Double your storage density or save on infrastructure costs with the new cold tier powered by
searchable snapshots and object stores like S3.

[discrete]
== Native support of CCR and CCS in {ecloud}

Replicate and search data across regions and cloud providers to increase availability and better
search performance with enhanced cross-cluster replication (CCR) and cross-cluster search (CCS).
// end::whats-new[]
