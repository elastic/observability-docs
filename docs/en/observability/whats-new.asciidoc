[[whats-new]]
= What's new in {minor-version}

Here are the highlights of what's new and improved in {minor-version}.

Other versions:
{observability-guide-all}/8.2/whats-new.html[8.2] |
{observability-guide-all}/8.1/whats-new.html[8.1] |
{observability-guide-all}/8.0/whats-new.html[8.0] |
{observability-guide-all}/7.17/whats-new.html[7.17] |

// tag::whats-new[]

// What's new content goes in here. Don't uncomment or remove the tags surrounding this content :)

[discrete]
== Elastic Serverless Forwarder is now Generally Available (GA)
The Elastic Serverless Forwarder is now GA! This AWS Lambda application allows
you streamline ingest of logs from multiple Amazon cloud services, including
CloudWatch, Kinesis Data Streams, S3, and SQS.

[role="screenshot"]
image::images/aws-lambda-flow.png[AWS Lambda with Elastic Serverless Forwarder]

For more information, see https://www.elastic.co/blog/elastic-and-aws-serverless-application-repository-speed-time-to-actionable-insights-with-frictionless-log-ingestion-from-amazon-s3[this blog]
 or https://github.com/elastic/elastic-serverless-forwarder/blob/main/docs/README-AWS.md[read the docs].

[discrete]
== APM Server introduces support for OpenTelemetry protocol over HTTP transport
Starting in version 8.3, APM Server supports the OpenTelemetry protocol over
HTTP transport (https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md#otlphttp[OTLP/HTTP]).
This new support is in addition to the existing OTLP
protocol over gRPC transport (https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md#otlpgrpc[OTLP/gRPC]).
Both OTLP/gRPC and OTLP/HTTP use the
same protobuf payload.

The OTLP/HTTP protocol is useful for users with gRPC-based infrastructure
limitations, or users who want to take advantage of the smaller HTTP dependency.
These benefits and additional details are outlined in the official https://github.com/open-telemetry/oteps/blob/main/text/0099-otlp-http.md#motivation[OpenTelemetry
HTTP proposal].

[discrete]
== New AWS Fargate integration available as beta

AWS Fargate allows you to run ECS containers without having to manage servers
or clusters of EC2 instances. Elasticâ€™s new AWS Fargate integration (beta)
enables monitoring of Amazon ECS containers and
includes an out-of-the-box dashboard.

[role="screenshot"]
image::images/aws-fargate.png[Elastic integration with AWS Fargate]

For more information, see the https://docs.elastic.co/integrations/awsfargate[AWS Fargate documentation].

[discrete]
== New integrations for Salesforce, Hadoop, Nagios, Apache Spark, and Spring Boot
New out-of-the-box Elastic integrations (beta) for Salesforce and Hadoop give
you the visibility you need to troubleshoot performance issues with these
platforms. We have also introduced new {agent} integrations for Nagios,
Apache Spark, and Spring Boot.

To learn more about these new integrations, see the https://docs.elastic.co/integrations[Integrations documentation].

[discrete]
== Simplified management of {agents} at scale

Rolling upgrades now allow you to specify scheduled maintenance windows for
{agent} upgrades. The platform will take care of spreading the load of
upgrades across the specified window in order to reduce the burden on the
network resources. In addition, you will be able to set a future date and time
for maintenance to take place.

You also now have the ability to attach tags to {agents} during installation
and see those tags in the {fleet} UI. You can filter and apply actions to Elastic
Agents based on these tags for greater control over agents at scale.
// end::whats-new[]
