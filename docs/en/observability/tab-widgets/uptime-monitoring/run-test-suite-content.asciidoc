// tag::heartbeat[]

If you used {heartbeat} to <<uptime-set-up-choose, set up monitors>>, save changes to your `heartbeat.yml` file and make sure you've completed <<uptime-set-up-connect>>.

// [ One monitor will appear on the **Monitor management** page for each journey ]

// end::heartbeat[]

// tag::managed[]

beta[] After setting configuration options, use the `push` command to create monitors.
The `push` command will create a monitor in {kib} for each local journey 
so you manage all the browser monitors from your local environment.

Push journeys to {kib} using:

[source,sh]
----
npx @elastic/synthetics push --auth <api-key> --url <kibana-url> --project <id|name>
----

To generate an API key:

. Go to **Monitor Management** in the {uptime-app}.
. Click **API Keys**.
. Click **Generate API key**.

image::images/synthetics-monitor-management-api-key.png[API Keys tooltip on the Uptime app's Monitor Management page]

NOTE: If you are pushing to a <<private-locations,private location>>, you must use an API key generated in 8.4 or higher.

For more details on using the `push` command, see <<elastic-synthetics-push-command>>.

One monitor will appear on the **Monitor management** page for each journey.

// end::managed[]

// tag::agent[]

beta[] If you used {agent} to <<uptime-set-up-choose, set up monitors>>, click **Save and continue** in the integration UI after inputting all configurations options to create your monitor.

// end::agent[]
