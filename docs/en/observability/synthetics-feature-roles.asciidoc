[[synthetics-feature-roles]]
= Grant users access to secured resources

You can use role-based access control to grant users access to secured
resources. The roles that you set up depend on your organization's security
requirements and the minimum privileges required to use specific features.

Typically you need the create the following separate roles:

* <<synthetics-setup-privileges,Setup role>> for enabling Monitor Management.
* <<synthetics-write-privileges,Writer role>>  for creating, modifying, and deleting monitors.
* <<synthetics-read-privileges,Reader role>> for {kib} users who need to view and
create visualizations that access Synthetics data.

{es-security-features} provides {ref}/built-in-roles.html[built-in roles] that grant a
subset of the privileges needed by Synthetics users.
When possible, assign users the built-in roles to minimize the affect of future changes on your security strategy.
If no built-in role is available, you can assign users the privileges needed to accomplish a specific task.

In general, these are types of privileges you'll work with:

* **{es} cluster privileges**: Manage the actions a user can perform against your cluster.
* **{es} index privileges**: Control access to the data in specific indices your cluster.
// * **{kib} space privileges**: Grant users write or read access to features and apps within {kib}.

[discrete]
[[synthetics-setup-privileges]]
= Setup role

Administrators who set up Synthetics typically need to enable Monitor Management.

Enabling Monitor Management is an admin-level task that requires extra privileges and
must be completed just once by an admin before any users with the <<synthetics-write-privileges>>
can create synthetic monitors. This applies to monitors created via both
<<synthetics-get-started-project,projects>> and <<synthetics-get-started-ui,the UI>>.

As a best practice, *grant the setup role to administrators only*, and use a more restrictive
role for event publishing.

[role="screenshot"]
image::images/synthetics-enable-monitor-management.png[Synthetics app in Kibana on the Management tab before Monitor Management is enabled]

Create a *setup role*, called something like `synthetics_setup`:

. Start with the `editor` {ref}/built-in-roles.html[built-in role].
This role grants full access to all features in {kib} (including the {observability} solution)
and read-only access to data indices.
. Grant the role the following additional privileges, which are required to enable Monitor Management:
+
[options="header"]
|====
| Type | Privilege | Purpose

| {ref}/security-privileges.html#privileges-list-cluster[Cluster]
| `monitor`
| Allows the user to retrieve cluster details.

| {ref}/security-privileges.html#privileges-list-cluster[Cluster]
| `read_ilm`
| Allows the user access to all read-only index lifecycle management operations.

| {ref}/security-privileges.html#privileges-list-cluster[Cluster]
| `read_pipeline`
| Gives the user read-only access to the ingest pipline.

| {ref}/security-privileges.html#privileges-list-indices[Index]
| `synthetics-*`: `view_index_metadata`
| Gives the user read-only access to index and data stream metadata.

| {ref}/security-privileges.html#privileges-list-indices[Index]
| `synthetics-*`: `create_doc`
| Allows the user to index documents.

| {ref}/security-privileges.html#privileges-list-indices[Index]
| `synthetics-*`: `auto_configure`
| Permits auto-creation of indices and data streams.

| {ref}/security-privileges.html#privileges-list-cluster[Cluster]
| `manage_security`
| Allows access to all security-related operations such as CRUD operations on users and roles and cache clearing.

| {ref}/security-privileges.html#privileges-list-cluster[Cluster]
| `manage_api_key`
| Allows access to all security-related operations on {es} API keys.

|====

[discrete]
[[synthetics-write-privileges]]
=  Writer role

IMPORTANT: To minimize the privileges required by the writer role, use the
<<synthetics-setup-privileges,setup role>> to enable Monitor Management.
This section assumes another user has already enabled Monitor Management.

Create a *writer role*, called something like `synthetics_writer`:

. Start with the `editor` {ref}/built-in-roles.html[built-in role].
This role grants full access to all features in {kib} (including the {observability} solution)
and read-only access to data indices.

. _If the user should have permission to create, modify, and delete project monitors_,
they will need an API key that can be used to `push` monitors.
To create API keys, the user will also need _at least one_ of the following privileges in addition to the
privileges included in the `editor` built-in role:
+
[options="header"]
|====
|Type | Privilege | Purpose

| {ref}/security-privileges.html#privileges-list-cluster[Cluster]
| `manage_own_api_key`
| Allows access to all security-related operations on {es} API keys that are owned by the current authenticated user.

| {ref}/security-privileges.html#privileges-list-cluster[Cluster]
| `manage_security`
| Allows access to all security-related operations such as CRUD operations on users and roles and cache clearing.

| {ref}/security-privileges.html#privileges-list-cluster[Cluster]
| `manage_api_key`
| Allows access to all security-related operations on {es} API keys.

|====

[discrete]
[[synthetics-read-privileges]]
= Reader role

For users who only need to view results in {kib},
use the `viewer` {ref}/built-in-roles.html[built-in role].

// [discrete]
// [[synthetics-privileges-learn-more]]
// = Learn more about privileges, roles, and users

// Want to learn more about creating users and roles? See
// {ref}/secure-cluster.html[Secure a cluster]. Also see:

// * {ref}/security-privileges.html[Security privileges] for a description of
// available privileges
// * {ref}/built-in-roles.html[Built-in roles] for a description of roles that
// you can assign to users
