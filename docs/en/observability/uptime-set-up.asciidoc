[[uptime-set-up]]
= Use lightweight monitors

To set up a lightweight monitor, you need to configure the monitor, run it, and send data back to {es}.
After setup is complete, the data will be available in the {uptime-app} in {kib} to view, analyze, and alert on.

[discrete]
[[uptime-set-up-choose]]
== Choose an approach

There are three ways to set up a lightweight monitor: *{heartbeat}*,  *{uptime-app}*, or *project monitors*.

|===
| **{heartbeat}** | {heartbeat} is a lightweight daemon that you install on a remote server to periodically
check the status of your services and determine if they are available. Performance data is
then gathered and reported back to {heartbeat}, where it's formatted and sent to the {stack}.

This approach is only recommended for <<monitoring-uptime,lightweight checks>>, and
works well for system administrators wanting to configure lightweight
monitors using YAML files. You should _not_ use this approach to create browser monitors.
Instead, refer to <<synthetic-run-tests>>.

Read more in <<uptime-set-up-choose-heartbeat>>.

image:images/uptime-set-up-heartbeat.png[]

| **{uptime-app}** | beta[] The {uptime-app} is an application in {kib}.
You can now create monitors directly in the {uptime-app}.
To try out this beta functionality, you will need to enable Monitor Management.

This approach works well if you want to configure and update monitors using a
UI in your browser or using a GitOps workflow.

However, **this functionality is in beta and is subject to change.**

Read more in <<uptime-set-up-choose-agent>>.

image:images/uptime-set-up-app.png[]

| **Project monitors** | beta[] With project monitors, you write tests in an external version-controlled project using YAML for lightweight monitors and JavaScript for browser monitors. Then, you use the `@elastic/synthetics` NPM libraryâ€™s `push` command to create monitors in {kib}.

This approach works well if you want to create both browser monitors and
lightweight monitors. It also allows you to configure and update monitors
using a GitOps workflow.

However, **this functionality is in beta and is subject to change.**

Read more in <<uptime-set-up-choose-project-monitors>>.

image:images/uptime-set-up-project-monitors.png[]

|===

NOTE: To use the Elastic Synthetics integration, see the https://www.elastic.co/guide/en/observability/8.3/uptime-set-up.html#uptime-set-up-choose-agent[8.3 documentation]. The Elastic Synthetics integration is similar to the {uptime-app} approach described above, but contains fewer configuration options and does not allow you to run monitors against Elastic's global managed testing locations.
