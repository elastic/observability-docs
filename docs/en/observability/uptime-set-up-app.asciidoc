[[uptime-set-up-choose-agent]]
= Use the {uptime-app}

beta[]

There are two ways you can create and manage lightweight monitors in the {uptime-app}:

* Using the *{uptime-app}*'s Monitor Management UI.
* Using YAML files to create lightweight *project monitors*.

And, you can run those monitors on <<global-managed-testing-infrastructure,Elastic's global managed testing infrastructure>>
or <<private-locations,create a private location>> to run monitors from your own premises.

++++
<div class="imageblock">
<img
  src="images/uptime-set-up-app.png"
  class="w-100"
  alt="Diagram showing which pieces of software are used to configure monitors, create monitors, and view results when using the Uptime App. Described in detail in Diagram text description."
  aria-details="diagram-text-app">
</div>
++++

[[diagram-text-app]]
[%collapsible]
.Diagram text description
====
. There are two possible places to start:
    * *Uptime app*: Configure a new monitor in **{kib}**, specifically the **{observability} {uptime-app}**.
    * *Project monitors*: Create a **Project using @elastic/synthetics** using `elastic-synthetics init`.
      Then, add and configure lightweight monitors in one or more YAML files.
. How you create monitors depends on which option you chose above.
    * If you started with _the UI_, you'll use the {kib} UI to select the location while configuring the monitor.
    * If you started with _YAML files_, you'll use the Elastic Synthetics library's **`push` command**.
      This requires an **API key and {kib} URL** to authenticate.
. There are two types of locations you can use.
    * **Global managed infrastructure**
    * **Private locations**
. The monitor will send data to **{es}** regardless of its location.
. **{kib}**, specifically the **{observability} {uptime-app}**, reads results from {es} and visualizes those results in the UI.
====

NOTE: To use the Elastic Synthetics integration, see the https://www.elastic.co/guide/en/observability/8.3/uptime-set-up.html#uptime-set-up-choose-agent[8.3 documentation]. The Elastic Synthetics integration is similar to the {uptime-app} approach described above, but contains fewer configuration options and does not allow you to run monitors against Elastic's global managed testing locations.

[discrete]
[[uptime-set-up-prereq]]
== Prerequisites

You can now create monitors directly in the {uptime-app}.
To try this beta functionality, first you need to enable Monitor Management:

. Go to **{observability}** -> **Uptime**.
. Click **Monitor Management**.
. Review the terms and conditions and click **Enable** to start using Monitor Management.

[IMPORTANT]
======
To enable Monitor Management, you must be logged into {kib} as a user with
the following privileges:

* {ref}/security-privileges.html#privileges-list-cluster[Cluster privileges]: `monitor`, `read_ilm`, `read_pipeline`, and at least one of `manage_own_api_key`, `manage_security`, or `manage_api_key`
* {ref}/security-privileges.html#privileges-list-indices[Indices privileges] for `synthetics-*`: `view_index_metadata`, `create_doc`, `auto_configure`
======

[discrete]
[[global-managed-testing-infrastructure]]
== Use global managed testing infrastructure

With Elastic's global managed testing infrastructure, you can create and run monitors in multiple
locations without having to manage your own infrastructure.
Elastic takes care of software updates and capacity planning for you.

You can configure and create monitors using the {uptime-app} UI or alongside
project monitors using the Elastic Synthetics library.

--
include::tab-widgets/uptime-monitoring/uptime-set-up-widget.asciidoc[]
--

[discrete]
[[private-locations]]
== Run a monitor on private locations

--
include::synthetics-private-location.asciidoc[tag=intro]
--

[discrete]
[[private-locations-fleet-agent]]
=== Set up {fleet-server} and {agent}

include::synthetics-private-location.asciidoc[tag=fleet-agent]

[discrete]
[[private-location-docker]]
=== Pull the Docker image

include::synthetics-private-location.asciidoc[tag=docker]

[discrete]
[[private-locations-connect]]
=== Connect to the {stack}

include::synthetics-private-location.asciidoc[tag=connect]

[discrete]
[[private-locations-add]]
=== Add a private location

include::synthetics-private-location.asciidoc[tag=add]

[discrete]
[[private-locations-config]]
=== Configure the monitor

After you have successfully added a new private location, close the _Private locations_ flyout to return
to the Monitor Management page. From there:

include::tab-widgets/uptime-monitoring/uptime-set-up-private-widget.asciidoc[]

[discrete]
[[uptime-app-view-in-kibana]]
== View in {kib}

{agent} is now sending synthetic monitoring data to the {stack}.
Navigate to the {uptime-app} in {kib}, where you can see screenshots of each run,
set up alerts in case of test failures, and more.

If a test does fail (shown as `down` in the {uptime-app}), you'll be able to view the step script that failed,
any errors, and a stack trace.
See <<synthetics-visualize>> for more information.